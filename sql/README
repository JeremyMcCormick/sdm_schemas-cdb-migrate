
For more information, see 
http://dev.lsstcorp.org/trac/wiki/dbDC3aSetup



abbreviations used below:
 - rpwd: root mysql password
 - upwd: user mysql password


MySQL Account management
========================

Assuption: to start a run, user needs to have mysql account,
appropriate authorizations, and her/his email should be 
registered in mysql database.


  -- Commands to run to "register" user:

    -- create mysql user account and authorizing
       -- Warning: likely we will need to open remote access 
       -- at least to some domains!
  mysql -uroot -p<rpwd> -e 'GRANT ALL ON `<userName>\_%`.* TO `<userName>`@`localhost` IDENTIFIED BY "<upwd>"'
  mysql -uroot -p<rpwd> -e 'GRANT SELECT ON *.* TO `<userName>`@`localhost` IDENTIFIED BY "<upwd>"'
  mysql -uroot -p<rpwd> -e 'GRANT SELECT, INSERT ON GlobalDB.RunInfo_DC3a TO `<userName>`@`localhost` IDENTIFIED BY "<upwd>"'
  mysql -uroot -p<rpwd> -e 'GRANT EXECUTE ON FUNCTION GlobalDB.extendRun TO `<userName>`@`localhost` IDENTIFIED BY "<upwd>"'
  -- The above will authorize everybody to insert runs and extend runs' expiration time.
  -- Notice that users won't be able to hack in and extend runs by calling 'UPDATE' by hand

    -- registering email
  mysql -uroot -p<rpwd> GlobalDB -e 'INSERT INTO UserInfo_DC3a(name, email) VALUES ("<username>", "<email>"))'

 Notice: I am planning to bundle all this into a single script
 input: username, userpassword, useremail



One-time setup
==============

  -- Run the commands from this section once
  -- 
  -- Notice that mysql root privileges are required.

  -- 1) initialize global database
  mysql -uroot -p<rpwd> < setup_GlobalDB.sql


checking status
===============


todo: need to write a script that checks if mysql account is set for given user.
Input: db version (eg dc3a), and username



Per run setup
=============

  -- input:
  --   - dc version, eg dc3a
  --   - run name
  --   - run type. Values: user/production. Default: user. 
  --   - username + mysql password


  -- check available disk space, if too low (say below 10%)
  -- alert someone and give up

  -- if it is production run, then read special policy file 
  -- which defines usernames that can start production runs.
  -- Fail if user not authorized to start a production run.
 
  -- create per run database, using the following naming conventions:
  -- <userName>_<DC version>_<u|p>_<run number or name>,
  -- for example, jbecla_DC3a_u_123, smm_DC3a_u_myTestRun, admin_DC3a_p_final
  -- u/p indicates run type (user/production)
  mysql -u<userName> -p<upwd> -e "CREATE DATABASE <dbName>"


  -- Load schema. Use the appropriate schema file:
  -- lsstSchema4mysqlDC3a.sql or lsstSchema4mysqlDC3b.sql 
  mysql -u<userName> -p<upwd> <dbName> < <schema file>


  -- Load stored procedures and functions
  mysql -u<userName> -p<upwd> <dbName> < setup_storedFunctions.sql


  -- Load sdqa specific tables
  mysql -u<userName> -p<upwd> <dbName> < setup_sdqa.sql


  -- Load run specific contents and tables
  mysql -u<userName> -p<upwd> <dbName> < setup_perRunTables.sql


  -- register this run in the global database
  -- if it is a user run do:
  mysql -u<userName> -p<upwd> GlobalDB -e 'INSERT INTO RunInfo_DC3a (runName, dbName, startDate, expDate, initiator) VALUES ("<runName>", "<dbName>", NOW(), DATE_ADD(NOW(), INTERVAL 2 WEEK), "<userName>")'
  -- if it is a production run do:
  mysql -u<userName> -p<upwd> GlobalDB -e 'INSERT INTO RunInfo_DC3a (runName, dbName, startDate, expDate, initiator) VALUES ("<runName>", "<dbName>", NOW(), DATE_ADD(NOW(), INTERVAL 10 YEAR), "<userName>")'



Asynchronous
============
 -- run this once per day, preferably at night
 /DMS/cat/???/scripts/cleanExpiredRuns.py root <rpwd>
