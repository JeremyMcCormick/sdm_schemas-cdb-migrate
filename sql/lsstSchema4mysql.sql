
-- LSST Database Schema
-- $Author$
-- $Revision$
-- $Date$
--
-- See <http://lsstdev.ncsa.uiuc.edu:8100/trac/wiki/Copyrights>
-- for copyright information.


CREATE TABLE AAA_Version_DC3_3_0_1 (version CHAR);

--  -------------------------------------------------- 
--  Generated by Enterprise Architect Version 7.1.832
--  Created On : Tuesday, 28 October, 2008 
--  DBMS       : MySql 
--  -------------------------------------------------- 






-- Create Tables 
CREATE TABLE mops_Removals2Tracklets
(
	eventId BIGINT NOT NULL COMMENT 'Parent event ID (from mops_History table)',
	trackletId BIGINT NOT NULL COMMENT 'Removed tracklet ID',
	PRIMARY KEY (eventId),
	INDEX idx_mopsRemovals2Tracklets_trackletId (trackletId ASC),
	KEY (eventId)
)  COMMENT='Table for associating tracklets with removal events (one removal per event).';


CREATE TABLE mops_Precoveries2Tracklets
(
	eventId BIGINT NOT NULL COMMENT 'Parent event ID (from mops_History table)',
	trackletId BIGINT NOT NULL COMMENT 'Precovered tracklet ID',
	ephemerisDistance FLOAT(0) NOT NULL COMMENT 'Predicted position minus actual, arcsecs',
	ephemerisUncertainty FLOAT(0) NULL COMMENT 'Predicted error ellipse semi-major axis, arcsecs',
	PRIMARY KEY (eventId),
	INDEX idx_mopsPrecoveries2Tracklets_trackletId (trackletId ASC),
	KEY (eventId)
)  COMMENT='Table for associating tracklets with precovery events (one precovery per event).';


CREATE TABLE mops_MovingObject2Tracklets
(
	movingObjectId BIGINT NOT NULL,
	trackletId BIGINT NOT NULL,
	INDEX idx_mopsMovingObject2Tracklets_movingObjectId (movingObjectId ASC),
	INDEX idx_mopsMovingObject2Tracklets_trackletId (trackletId ASC)
)  COMMENT='Current membership of tracklets and moving objects.';


CREATE TABLE _DIASource2Alert
(
	alertId INTEGER NOT NULL COMMENT 'Pointer to an entry in Alert table',
	diaSourceId BIGINT NOT NULL COMMENT 'Pointer to an entry in DIASource table',
	KEY (alertId),
	KEY (diaSourceId)
)  COMMENT='Mapping: DIASource --> alerts generated by the object';


CREATE TABLE mops_Tracklets2DIASource
(
	trackletId BIGINT NOT NULL,
	diaSourceId BIGINT NOT NULL,
	PRIMARY KEY (trackletId, diaSourceId),
	INDEX idx_mopsTracklets2DIASource_diaSourceId (diaSourceId ASC),
	KEY (trackletId)
)  COMMENT='Table maintaining many-to-many relationship between tracklets and detections.';


CREATE TABLE mops_Tracklets
(
	trackletId BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Auto-generated internal MOPS tracklet ID',
	ccdExposureId BIGINT NOT NULL COMMENT 'Terminating field ID - pointer to Science_CCD_Exposure',
	procHistoryId INT NOT NULL COMMENT 'Pointer to processing history (prv_ProcHistory)',
	ssmId BIGINT NULL COMMENT 'Matching SSM ID for clean classifications',
	velRa DOUBLE NULL COMMENT 'Average RA velocity deg/day, cos(dec) applied',
	velRaErr DOUBLE NULL COMMENT 'Uncertainty in RA velocity',
	velDecl DOUBLE NULL COMMENT 'Average Dec velocity, deg/day)',
	velDeclErr DOUBLE NULL COMMENT 'Uncertainty in Dec velocity',
	velTot DOUBLE NULL COMMENT 'Average total velocity, deg/day',
	accRa DOUBLE NULL COMMENT 'Average RA Acceleration, deg/day^2',
	accRaErr DOUBLE NULL COMMENT 'Uncertainty in RA acceleration',
	accDecl DOUBLE NULL COMMENT 'Average Dec Acceleration, deg/day^2',
	accDeclErr DOUBLE NULL COMMENT 'Uncertainty in Dec acceleration',
	extEpoch DOUBLE NULL COMMENT 'Extrapolated (central) epoch, MJD (UTC)',
	extRa DOUBLE NULL COMMENT 'Extrapolated (central) RA, deg',
	extRaErr DOUBLE NULL COMMENT 'Uncertainty in extrapolated RA, deg',
	extDecl DOUBLE NULL COMMENT 'Extrapolated (central) Dec, deg',
	extDeclErr DOUBLE NULL COMMENT 'Uncertainty in extrapolated Dec, deg',
	extMag DOUBLE NULL COMMENT 'Extrapolated (central) magnitude',
	extMagErr DOUBLE NULL COMMENT 'Uncertainty in extrapolated mag, deg',
	probability DOUBLE NULL COMMENT 'Likelihood tracklet is real (unused currently)',
	status CHAR(1) NULL COMMENT 'processing status (unfound ''X'', unattributed ''U'', attributed ''A'')',
	classification CHAR(1) NULL COMMENT 'MOPS efficiency classification',
	PRIMARY KEY (trackletId),
	INDEX idx_mopsTracklets_ccdExposureId (ccdExposureId ASC),
	INDEX idx_mopsTracklets_ssmId (ssmId ASC),
	INDEX idx_mopsTracklets_classification (classification ASC),
	INDEX idx_mopsTracklets_extEpoch (extEpoch ASC)
) ;


CREATE TABLE mops_Runtime
(
	eventId BIGINT NOT NULL AUTO_INCREMENT,
	subsystem VARCHAR(20) NOT NULL,
	message VARCHAR(250) NOT NULL,
	data BIGINT NULL,
	dateSubmitted TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
	status CHAR(1) NULL,
	PRIMARY KEY (eventId),
	KEY (eventId)
) ;


CREATE TABLE mops_Identifications2MovingObject
(
	eventId BIGINT NOT NULL COMMENT 'Parent event ID (from mops_History table)',
	childObjectId BIGINT NOT NULL COMMENT 'Matching (child) derived object ID',
	PRIMARY KEY (eventId),
	INDEX idx_mopsIdentifications2MovingObject_childObjectId (childObjectId ASC),
	KEY (eventId)
)  COMMENT='Table for associating moving objects with identification events (one object per event). The original orbit and tracklets for the child can be obtained from the MOPS_History table by looking up the child object.';


CREATE TABLE mops_Derivations2Tracklets
(
	eventId BIGINT NOT NULL COMMENT 'Parent event ID (from mops_History table)',
	trackletId BIGINT NOT NULL COMMENT 'Associated tracklet ID (multiple rows per event)',
	PRIMARY KEY (eventId, trackletId),
	INDEX idx_mopsDerivations2Tracklets_trackletId (trackletId ASC),
	KEY (eventId)
)  COMMENT='Table for associating tracklets with derivation events. There is a one to many relationship between events and tracklets (there will be multiple rows per event).';


CREATE TABLE mops_Attributions2Tracklets
(
	eventId BIGINT NOT NULL COMMENT 'Parent event ID (from mops_History table)',
	trackletId BIGINT NOT NULL COMMENT 'Attributed tracklet ID',
	ephemerisDistance FLOAT(0) NOT NULL COMMENT 'Predicted position minus actual, arcsecs',
	ephemerisUncertainty FLOAT(0) NULL COMMENT 'Predicted error ellipse semi-major axis, arcsecs',
	PRIMARY KEY (eventId),
	INDEX idx_mopsAttributions2Tracklets_trackletId (trackletId ASC),
	KEY (eventId)
)  COMMENT='Table for associating tracklets with attribution events (one tracklet per event).';


CREATE TABLE _mops_MoidQueue
(
	movingObjectId BIGINT NOT NULL COMMENT 'Referring derived object',
	movingObjectVersion INT NOT NULL COMMENT 'version of referring derived object',
	eventId BIGINT NOT NULL COMMENT 'Referring history event causing insertion',
	insertTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Wall clock time object was queued',
	PRIMARY KEY (movingObjectId, movingObjectVersion),
	KEY (movingObjectId),
	INDEX idx_mopsMoidQueue_eventId (eventId ASC)
)  COMMENT='Internal table which maintain a queue of objects to be passed to the MOPS precovery pipeline. 
 Will eventually be replaced by a different queueing mechanism.';


CREATE TABLE _mops_EonQueue
(
	movingObjectId BIGINT NOT NULL COMMENT 'Referring derived object',
	eventId BIGINT NOT NULL COMMENT 'Referring history event causing insertion',
	insertTime TIMESTAMP NOT NULL COMMENT 'Wall clock time object was queued',
	status CHAR(1) NULL DEFAULT 'I' COMMENT 'Processing status N => new, I => ID1 done, P => precov done, X => finished',
	PRIMARY KEY (movingObjectId),
	KEY (movingObjectId),
	INDEX idx__mopsEonQueue_eventId (eventId ASC)
)  COMMENT='Internal table which maintains a queue of objects to be passed to the MOPS precovery pipeline. 
 Will eventually be replaced by a different queueing mechanism.';


CREATE TABLE sdqa_Rating_4ScienceCCDExposure
(
	sdqa_ratingId BIGINT NOT NULL COMMENT 'Primary key.',
	sdqa_metricId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Metric.',
	sdqa_thresholdId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Threshold.',
	ccdExposureId BIGINT NOT NULL COMMENT 'Pointer to Science_CCD_Exposure.',
	metricValue DOUBLE NOT NULL COMMENT 'Value of this SDQA metric.',
	metricErr DOUBLE NOT NULL COMMENT 'Uncertainty of the value of this metric.',
	PRIMARY KEY (sdqa_ratingId),
	KEY (ccdExposureId),
	KEY (sdqa_metricId),
	KEY (sdqa_thresholdId)
)  COMMENT='Various SDQA ratings for a given CCD image.';


CREATE TABLE sdqa_Rating_4ScienceAmpExposure
(
	sdqa_ratingId BIGINT NOT NULL COMMENT 'Primary key.',
	sdqa_metricId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Metric.',
	sdqa_thresholdId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Threshold.',
	ampExposureId BIGINT NOT NULL COMMENT 'Pointer to Science_Amp_Exposure.',
	metricValue DOUBLE NOT NULL COMMENT 'Value of this SDQA metric.',
	metricErr DOUBLE NOT NULL COMMENT 'Uncertainty of the value of this metric.',
	PRIMARY KEY (sdqa_ratingId),
	KEY (ampExposureId),
	KEY (sdqa_metricId),
	KEY (sdqa_thresholdId)
)  COMMENT='Various SDQA ratings for a given amplifier image. There will approximately 30 of these records per image record.';


CREATE TABLE VarObject
(
	objectId BIGINT NOT NULL COMMENT 'Unique id.',
	ra DOUBLE NOT NULL,
	decl DOUBLE NOT NULL,
	raErr FLOAT(0) NOT NULL,
	declErr FLOAT(0) NOT NULL,
	flag4stage1 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	flag4stage2 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	flag4stage3 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	uAmplitude FLOAT(0) NULL,
	uPeriod FLOAT(0) NULL,
	uTimescale FLOAT(0) NULL,
	gAmplitude FLOAT(0) NULL,
	gPeriod FLOAT(0) NULL,
	gTimescale FLOAT(0) NULL,
	rAmplitude FLOAT(0) NULL,
	rPeriod FLOAT(0) NULL,
	rTimescale FLOAT(0) NULL,
	iAmplitude FLOAT(0) NULL,
	iPeriod FLOAT(0) NULL,
	iTimescale FLOAT(0) NULL,
	zAmplitude FLOAT(0) NULL,
	zPeriod FLOAT(0) NULL,
	zTimescale FLOAT(0) NULL,
	yAmplitude FLOAT(0) NULL,
	yPeriod FLOAT(0) NULL,
	yTimescale FLOAT(0) NULL,
	uScalegram01 FLOAT(0) NULL COMMENT '"Scalegram": time series as the average of the squares of the wavelet coefficients at a given scale. See Scargel et al 1993 for more details.',
	uScalegram02 FLOAT(0) NULL,
	uScalegram03 FLOAT(0) NULL,
	uScalegram04 FLOAT(0) NULL,
	uScalegram05 FLOAT(0) NULL,
	uScalegram06 FLOAT(0) NULL,
	uScalegram07 FLOAT(0) NULL,
	uScalegram08 FLOAT(0) NULL,
	uScalegram09 FLOAT(0) NULL,
	uScalegram10 FLOAT(0) NULL,
	uScalegram11 FLOAT(0) NULL,
	uScalegram12 FLOAT(0) NULL,
	uScalegram13 FLOAT(0) NULL,
	uScalegram14 FLOAT(0) NULL,
	uScalegram15 FLOAT(0) NULL,
	uScalegram16 FLOAT(0) NULL,
	uScalegram17 FLOAT(0) NULL,
	uScalegram18 FLOAT(0) NULL,
	uScalegram19 FLOAT(0) NULL,
	uScalegram20 FLOAT(0) NULL,
	uScalegram21 FLOAT(0) NULL,
	uScalegram22 FLOAT(0) NULL,
	uScalegram23 FLOAT(0) NULL,
	uScalegram24 FLOAT(0) NULL,
	uScalegram25 FLOAT(0) NULL,
	gScalegram01 FLOAT(0) NULL,
	gScalegram02 FLOAT(0) NULL,
	gScalegram03 FLOAT(0) NULL,
	gScalegram04 FLOAT(0) NULL,
	gScalegram05 FLOAT(0) NULL,
	gScalegram06 FLOAT(0) NULL,
	gScalegram07 FLOAT(0) NULL,
	gScalegram08 FLOAT(0) NULL,
	gScalegram09 FLOAT(0) NULL,
	gScalegram10 FLOAT(0) NULL,
	gScalegram11 FLOAT(0) NULL,
	gScalegram12 FLOAT(0) NULL,
	gScalegram13 FLOAT(0) NULL,
	gScalegram14 FLOAT(0) NULL,
	gScalegram15 FLOAT(0) NULL,
	gScalegram16 FLOAT(0) NULL,
	gScalegram17 FLOAT(0) NULL,
	gScalegram18 FLOAT(0) NULL,
	gScalegram19 FLOAT(0) NULL,
	gScalegram20 FLOAT(0) NULL,
	gScalegram21 FLOAT(0) NULL,
	gScalegram22 FLOAT(0) NULL,
	gScalegram23 FLOAT(0) NULL,
	gScalegram24 FLOAT(0) NULL,
	gScalegram25 FLOAT(0) NULL,
	rScalegram01 FLOAT(0) NULL,
	rScalegram02 FLOAT(0) NULL,
	rScalegram03 FLOAT(0) NULL,
	rScalegram04 FLOAT(0) NULL,
	rScalegram05 FLOAT(0) NULL,
	rScalegram06 FLOAT(0) NULL,
	rScalegram07 FLOAT(0) NULL,
	rScalegram08 FLOAT(0) NULL,
	rScalegram09 FLOAT(0) NULL,
	rScalegram10 FLOAT(0) NULL,
	rScalegram11 FLOAT(0) NULL,
	rScalegram12 FLOAT(0) NULL,
	rScalegram13 FLOAT(0) NULL,
	rScalegram14 FLOAT(0) NULL,
	rScalegram15 FLOAT(0) NULL,
	rScalegram16 FLOAT(0) NULL,
	rScalegram17 FLOAT(0) NULL,
	rScalegram18 FLOAT(0) NULL,
	rScalegram19 FLOAT(0) NULL,
	rScalegram20 FLOAT(0) NULL,
	rScalegram21 FLOAT(0) NULL,
	rScalegram22 FLOAT(0) NULL,
	rScalegram23 FLOAT(0) NULL,
	rScalegram24 FLOAT(0) NULL,
	rScalegram25 FLOAT(0) NULL,
	iScalegram01 FLOAT(0) NULL,
	iScalegram02 FLOAT(0) NULL,
	iScalegram03 FLOAT(0) NULL,
	iScalegram04 FLOAT(0) NULL,
	iScalegram05 FLOAT(0) NULL,
	iScalegram06 FLOAT(0) NULL,
	iScalegram07 FLOAT(0) NULL,
	iScalegram08 FLOAT(0) NULL,
	iScalegram09 FLOAT(0) NULL,
	iScalegram10 FLOAT(0) NULL,
	iScalegram11 FLOAT(0) NULL,
	iScalegram12 FLOAT(0) NULL,
	iScalegram13 FLOAT(0) NULL,
	iScalegram14 FLOAT(0) NULL,
	iScalegram15 FLOAT(0) NULL,
	iScalegram16 FLOAT(0) NULL,
	iScalegram17 FLOAT(0) NULL,
	iScalegram18 FLOAT(0) NULL,
	iScalegram19 FLOAT(0) NULL,
	iScalegram20 FLOAT(0) NULL,
	iScalegram21 FLOAT(0) NULL,
	iScalegram22 FLOAT(0) NULL,
	iScalegram23 FLOAT(0) NULL,
	iScalegram24 FLOAT(0) NULL,
	iScalegram25 FLOAT(0) NULL,
	zScalegram01 FLOAT(0) NULL,
	zScalegram02 FLOAT(0) NULL,
	zScalegram03 FLOAT(0) NULL,
	zScalegram04 FLOAT(0) NULL,
	zScalegram05 FLOAT(0) NULL,
	zScalegram06 FLOAT(0) NULL,
	zScalegram07 FLOAT(0) NULL,
	zScalegram08 FLOAT(0) NULL,
	zScalegram09 FLOAT(0) NULL,
	zScalegram10 FLOAT(0) NULL,
	zScalegram11 FLOAT(0) NULL,
	zScalegram12 FLOAT(0) NULL,
	zScalegram13 FLOAT(0) NULL,
	zScalegram14 FLOAT(0) NULL,
	zScalegram15 FLOAT(0) NULL,
	zScalegram16 FLOAT(0) NULL,
	zScalegram17 FLOAT(0) NULL,
	zScalegram18 FLOAT(0) NULL,
	zScalegram19 FLOAT(0) NULL,
	zScalegram20 FLOAT(0) NULL,
	zScalegram21 FLOAT(0) NULL,
	zScalegram22 FLOAT(0) NULL,
	zScalegram23 FLOAT(0) NULL,
	zScalegram24 FLOAT(0) NULL,
	zScalegram25 FLOAT(0) NULL,
	yScalegram01 FLOAT(0) NULL,
	yScalegram02 FLOAT(0) NULL,
	yScalegram03 FLOAT(0) NULL,
	yScalegram04 FLOAT(0) NULL,
	yScalegram05 FLOAT(0) NULL,
	yScalegram06 FLOAT(0) NULL,
	yScalegram07 FLOAT(0) NULL,
	yScalegram08 FLOAT(0) NULL,
	yScalegram09 FLOAT(0) NULL,
	yScalegram10 FLOAT(0) NULL,
	yScalegram11 FLOAT(0) NULL,
	yScalegram12 FLOAT(0) NULL,
	yScalegram13 FLOAT(0) NULL,
	yScalegram14 FLOAT(0) NULL,
	yScalegram15 FLOAT(0) NULL,
	yScalegram16 FLOAT(0) NULL,
	yScalegram17 FLOAT(0) NULL,
	yScalegram18 FLOAT(0) NULL,
	yScalegram19 FLOAT(0) NULL,
	yScalegram20 FLOAT(0) NULL,
	yScalegram21 FLOAT(0) NULL,
	yScalegram22 FLOAT(0) NULL,
	yScalegram23 FLOAT(0) NULL,
	yScalegram24 FLOAT(0) NULL,
	yScalegram25 FLOAT(0) NULL,
	primaryPeriod FLOAT(0) NULL,
	primaryPeriodErr FLOAT(0) NULL,
	uPeriodErr FLOAT(0) NULL,
	gPeriodErr FLOAT(0) NULL,
	rPeriodErr FLOAT(0) NULL,
	iPeriodErr FLOAT(0) NULL,
	zPeriodErr FLOAT(0) NULL,
	yPeriodErr FLOAT(0) NULL,
	PRIMARY KEY (objectId),
	KEY (objectId)
)  COMMENT='Table to store Variable Objects - this will keep a COPY of variable objects. All variable objects will be stored in the Object table. Main reasons to have this table is improving access speed to variable objects.';


CREATE TABLE ObjectPhotoZ
(
	objectId BIGINT NOT NULL COMMENT 'This is of a corresponding object from the Object table.',
	redshift FLOAT(0) NOT NULL COMMENT 'Photometric redshift.',
	redshiftErr FLOAT(0) NOT NULL COMMENT 'Photometric redshift uncertainty.',
	probability TINYINT NOT NULL DEFAULT 100 COMMENT 'Probability that given object has photo-z. 0-100. In %. Default 100%.',
	photoZ1 FLOAT(0) NULL,
	photoZ1Err FLOAT(0) NULL,
	photoZ2 FLOAT(0) NULL,
	photoZ2Err FLOAT(0) NULL,
	photoZ1Outlier FLOAT(0) NULL,
	photoZ2Outlier FLOAT(0) NULL,
	KEY (objectId)
)  COMMENT='Extension of the Object table for photo-z related information.';


CREATE TABLE DIASource
(
	diaSourceId BIGINT NOT NULL COMMENT 'Unique id.',
	ccdExposureId BIGINT NOT NULL COMMENT 'Pointer to CCD_Exposure table -ccd where the source was measured.',
	filterId TINYINT NOT NULL COMMENT 'Pointer to Filter table - filter used to take the Exposure where this source was measured.',
	objectId BIGINT NULL COMMENT 'Pointer to Object table. Might be NULL (each DIASource will point to either MovingObject or Object)',
	movingObjectId BIGINT NULL COMMENT 'Pointer to MovingObject table. Might be NULL (each DIASource will point to either MovingObject or Object)',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to ProcessingHistory table - an entry describing processing history of this source.',
	scId INTEGER NOT NULL COMMENT 'Pointer to corresponding SourceClassification entry.',
	ra DOUBLE NOT NULL COMMENT 'RA-coordinate of the source centroid (degrees) Need to support accuracy ~ 0.0001 arcsec.',
	ssmId BIGINT NULL COMMENT 'Pointer to mops_SSM table. Might be NULL. Yields the originating SSM object for synthetic detections injected by daytime MOPS.',
	decl DOUBLE NOT NULL COMMENT 'Dec coordinate of the source centroid (degrees). Need to support accuracy ~0.0001 arcsec.',
	__zoneId_placeholder INTEGER NULL COMMENT 'FIXME: placeholder',
	raErr4detection FLOAT(0) NOT NULL COMMENT 'Error in centroid RA coordinate (milliarcsec) coming from Detection Pipeline [FIXME, maybe use Stage name here?].',
	declErr4detection FLOAT(0) NOT NULL COMMENT 'Error in centroid Decl coordinate (milliarcsec) coming from Detection Pipeline [FIXME, maybe use Stage name here?].',
	raErr4wcs FLOAT(0) NULL COMMENT 'Error in centroid RA coordinate (milliarcsec) coming from WCS Stage.',
	declErr4wcs FLOAT(0) NULL COMMENT 'Error in centroid Decl coordinate (milliarcsec) coming from WCS Stage.',
	row DOUBLE NOT NULL COMMENT 'Pixel coordinate (Y) of the source centroid.',
	col DOUBLE NOT NULL COMMENT 'Pixel coordinate (X) of the source centroid.',
	rowErr FLOAT(0) NOT NULL COMMENT 'Error in pixel Y-coordinate.',
	colErr FLOAT(0) NOT NULL COMMENT 'Error in pixel X-coordinate.',
	cx DOUBLE NOT NULL COMMENT 'x-component of the (RA,Dec) unit vector',
	cy DOUBLE NOT NULL COMMENT 'y-component of the (RA,Dec) unit vector',
	cz DOUBLE NOT NULL COMMENT 'z-component of the (RA,Dec) unit vector',
	taiMidPoint DOUBLE NOT NULL COMMENT 'If a DIASource corresponds to a single exposure, taiMidPoint represents TAI time of the middle of exposure. For multiple exposures, this is middle of beginning-of-first-exposure to end-of-last-exposure.',
	taiRange FLOAT(0) NOT NULL COMMENT 'If a DIASource corresponds to a single exposure, taiRange equals to exposure length. If DIASource corresponds to multiple exposures, it taiRange equals to end-of-last-exposure minus beginning-of-first-exposure.',
	fwhmA FLOAT(0) NOT NULL COMMENT 'Size of the object along major axis (pixels).',
	fwhmB FLOAT(0) NOT NULL COMMENT 'Size of the object along minor axis (pixels).',
	fwhmTheta FLOAT(0) NOT NULL COMMENT 'Position angle of the major axis w.r.t. X-axis (measured in degrees).',
	lengthDeg DOUBLE NOT NULL COMMENT 'Size of the object along major axis (degrees).',
	flux FLOAT(0) NOT NULL COMMENT 'Measured DIA flux for the source (ADUs). Range is just a guesstimate, based on SM values [FIXME]',
	fluxErr FLOAT(0) NOT NULL COMMENT 'Error of the measured flux (ADUs). Range is just a guesstimate, based on SM values [FIXME]',
	psfMag DOUBLE NOT NULL COMMENT 'PSF magnitude of the object',
	psfMagErr FLOAT(0) NOT NULL COMMENT 'Uncertainty of PSF magnitude',
	apMag DOUBLE NOT NULL COMMENT 'Aperture magnitude',
	apMagErr FLOAT(0) NOT NULL COMMENT 'Uncertainty of aperture magnitude',
	modelMag DOUBLE NOT NULL COMMENT 'model magnitude (adaptive 2D gauss)',
	modelMagErr FLOAT(0) NULL COMMENT 'Uncertainly of model magnitude.',
	apDia FLOAT(0) NULL COMMENT 'Diameter of aperture (pixels)',
	refMag FLOAT(0) NULL COMMENT 'Reference magnitude before shape modulation applied (for synthetic detections)',
	Ixx FLOAT(0) NULL COMMENT 'Adaptive second moment',
	IxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty',
	Iyy FLOAT(0) NULL COMMENT 'Adaptive second moment',
	IyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty',
	Ixy FLOAT(0) NULL COMMENT 'Adaptive second moment',
	IxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty',
	snr FLOAT(0) NOT NULL COMMENT 'Signal-to-Noise ratio',
	chi2 FLOAT(0) NOT NULL COMMENT 'Chi-square value for the PSF fit',
	obsCode CHAR(3) NULL COMMENT 'MPC observatory code',
	isSynthetic CHAR(1) NULL COMMENT 'efficiency marker; indicates detection is synthetic',
	status CHAR(1) NULL COMMENT 'efficiency marker; indicates detection was detected (not lost in chip gap, etc.)',
	flag4association SMALLINT NULL COMMENT 'Problem/special conditions indicator (Kem noted that these flags could include delta_sky, delta_PSF, ...). FIXME: likely we should use a Stage name here',
	flag4detection SMALLINT NULL COMMENT 'Problem/special conditions indicator (Kem noted that these flags could include delta_sky, delta_PSF, ...). ',
	flag4wcs SMALLINT NULL COMMENT 'Problem/special conditions indicator (Kem noted that these flags could include delta_sky, delta_PSF, ...). ',
	PRIMARY KEY (diaSourceId),
	KEY (ccdExposureId),
	KEY (filterId),
	KEY (movingObjectId),
	KEY (objectId),
	KEY (procHistoryId),
	INDEX idx_DIASource_ssmId (ssmId ASC),
	KEY (scId),
	INDEX idx_DIASource_psfMag (psfMag ASC),
	INDEX idx_DIASource_taiMidPoint (taiMidPoint ASC)
) TYPE=MyISAM COMMENT='Table to store all Difference Image Analysis (DIA) Sources.';


CREATE TABLE Alert
(
	alertId INTEGER NOT NULL DEFAULT 0,
	ampExposureId BIGINT NOT NULL COMMENT 'Pointer to AmpExposure table.',
	objectId BIGINT NOT NULL COMMENT 'Id of object associated with given alert.',
	timeGenerated DATETIME NOT NULL COMMENT 'Date/time when alert was generated.',
	imagePStampURL VARCHAR(255) NULL COMMENT 'Logical URL describing where the image postamp associated with the alert is located.',
	templatePStampURL VARCHAR(255) NULL COMMENT 'Logical URL of the postagestamp of the template image related to given alert.',
	alertURL VARCHAR(255) NULL COMMENT 'Logical URL to the actual alert sent.',
	__voEventId BIGINT NULL COMMENT 'FIXME. Some sort of pointer to voEvent. Placeholder. Also, not sure if type is correct.',
	PRIMARY KEY (alertId),
	KEY (objectId),
	INDEX idx_Alert_timeGenerated (timeGenerated ASC),
	KEY (ampExposureId)
) TYPE=MyISAM COMMENT='Table to store generated alerts.';


CREATE TABLE Science_CCD_Exposure
(
	ccdExposureId BIGINT NOT NULL COMMENT 'Pointer to raw exposure.',
	exposureId BIGINT NOT NULL COMMENT 'Pointer to Exposure table. This also identifies Calibration_FPA_Exposure used to calibrated this exposure.',
	sceId INTEGER NOT NULL COMMENT 'Pointer to science calibrated exposure.',
	filterId TINYINT NOT NULL COMMENT 'Pointer to filter.',
	equinox FLOAT(0) NOT NULL COMMENT 'Equinox of World Coordinate System.',
	url VARCHAR(255) NOT NULL COMMENT 'Logical URL to the actual calibrated image.',
	ctype1 VARCHAR(20) NOT NULL COMMENT 'Coordinate projection type, axis 1.',
	ctype2 VARCHAR(20) NOT NULL COMMENT 'Coordinate projection type, axis 2.',
	crpix1 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 1.',
	crpix2 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 2.',
	crval1 DOUBLE NOT NULL COMMENT 'Coordinate value 1 @reference pixel.',
	crval2 DOUBLE NOT NULL COMMENT 'Coordinate value 2 @reference pixel.',
	cd1_1 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 1.',
	cd2_1 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 1.',
	cd1_2 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 2.',
	cd2_2 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 2.',
	dateObs DATETIME NOT NULL COMMENT 'Date/Time of observation start (UTC).',
	expTime FLOAT(0) NOT NULL COMMENT 'Duration of exposure.',
	photoFlam FLOAT(0) NOT NULL COMMENT 'Inverse sensitivity.',
	photoZP FLOAT(0) NOT NULL COMMENT 'System photometric zero-point.',
	nCombine INTEGER NOT NULL DEFAULT 1 COMMENT 'Number of images co-added to create a deeper image',
	PRIMARY KEY (ccdExposureId),
	KEY (ccdExposureId)
) ;


CREATE TABLE Science_Amp_Exposure
(
	ampExposureId BIGINT NOT NULL,
	ccdExposureId BIGINT NOT NULL,
	sdqa_statusId SMALLINT NOT NULL,
	PRIMARY KEY (ampExposureId),
	KEY (sdqa_statusId),
	KEY (ampExposureId),
	KEY (ccdExposureId)
) ;


CREATE TABLE Calibration_CCD_Exposure
(
	ccdExposureId BIGINT NOT NULL,
	exposureId INTEGER NOT NULL COMMENT 'Pointer to exposure.',
	calibTypeId TINYINT NOT NULL COMMENT 'Pointer to CalibType table',
	filterId TINYINT NOT NULL COMMENT 'Pointer to filter information.',
	equinox FLOAT(0) NOT NULL COMMENT 'Equinox of World Coordinate System.',
	ctype1 VARCHAR(20) NOT NULL COMMENT ' Coordinate projection type, axis 1.',
	ctype2 VARCHAR(20) NOT NULL COMMENT ' Coordinate projection type, axis 2.',
	crpix1 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 1.',
	crpix2 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 2.',
	crval1 DOUBLE NOT NULL COMMENT 'Coordinate value 1 @reference pixel.',
	crval2 DOUBLE NOT NULL COMMENT 'Coordinate value 2 @reference pixel.',
	cd1_1 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 1.',
	cd2_1 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 1.',
	cd1_2 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 2.',
	cd2_2 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 2.',
	dateObs DATETIME NOT NULL COMMENT 'Date/Time of observation start (UTC).',
	expTime FLOAT(0) NOT NULL COMMENT 'Duration of exposure.',
	nCombine INTEGER NOT NULL DEFAULT 1 COMMENT 'Number of images co-added to create a deeper image',
	PRIMARY KEY (ccdExposureId),
	KEY (exposureId),
	KEY (ccdExposureId)
)  COMMENT='Placeholder...';


CREATE TABLE Calibration_Amp_Exposure
(
	ccdExposureId BIGINT NULL COMMENT 'Pointer to CCD_Exposure.',
	ampExposureId BIGINT NOT NULL,
	PRIMARY KEY (ampExposureId),
	KEY (ccdExposureId),
	KEY (ampExposureId)
) ;


CREATE TABLE _Source2Amp_Exposure
(
	sourceId BIGINT NOT NULL COMMENT 'Pointer to entry in Source table.',
	ampExposureId BIGINT NOT NULL COMMENT 'Pointer to enty in AmpExposure table.',
	KEY (ampExposureId),
	KEY (sourceId)
)  COMMENT='Source --> AmpExposures';


CREATE TABLE mops_History
(
	eventId BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Auto-generated internal event ID',
	procHistoryId INT NOT NULL COMMENT 'Pointer to processing history (prv_ProcHistory)',
	eventType CHAR(1) NOT NULL COMMENT 'Type of event (A)ttribution/(P)recovery/(D)erivation/(I)dentification/(R)emoval',
	eventTime TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Timestamp for event creation',
	movingObjectId BIGINT NULL COMMENT 'Referring derived object ID',
	movingObjectVersion INT NULL COMMENT 'Pointer to resulting orbit',
	orbitCode CHAR(1) NULL COMMENT 'Information about computed orbit',
	d3 FLOAT(0) NULL COMMENT 'Computed 3-parameter D-criterion',
	d4 FLOAT(0) NULL COMMENT 'Computed 4-parameter D-criterion',
	ccdExposureId BIGINT NULL COMMENT 'Referring to Science CCD exposure ID generating the event',
	classification CHAR(1) NULL COMMENT 'MOPS efficiency classification for event',
	ssmId BIGINT NULL COMMENT 'Matching SSM ID for clean classifications',
	PRIMARY KEY (eventId),
	KEY (movingObjectId),
	INDEX idx_mopsHistory_ccdExposureId (ccdExposureId ASC),
	INDEX idx_mopsHistory_movingObjectId (movingObjectId ASC, movingObjectVersion ASC),
	INDEX idx_mopsHistory_procHistoryId (procHistoryId ASC),
	INDEX idx_mopsHistory_ssmId (ssmId ASC)
) ;


CREATE TABLE aux_Science_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE Object
(
	objectId BIGINT NOT NULL COMMENT 'Unique id.',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to ProcessingHistory table.',
	ra DOUBLE NOT NULL COMMENT 'RA-coordinate of the object (degrees). Weighted center of light across all filters. Need to support accuracy ~0.0001 arcsec.',
	decl DOUBLE NOT NULL COMMENT 'Dec-coordinate of the object (degrees). Weighted center of light across all filters. Need to support accuracy ~0.0001 arcsec',
	raErr FLOAT(0) NOT NULL,
	declErr FLOAT(0) NOT NULL,
	muRa DOUBLE NULL COMMENT 'derived proper motion, mu_alpha*cos(Dec) (measured in arcsec/yr)',
	muDecl DOUBLE NULL COMMENT 'derived proper motion, mu_delta (measured in arcsec/yr)',
	muRaErr FLOAT(0) NULL COMMENT 'Error in ra proper motion',
	muDeclErr FLOAT(0) NULL COMMENT 'Error in Decl proper motion',
	parallax FLOAT(0) NULL COMMENT 'derived parallax for the object',
	parallaxErr FLOAT(0) NULL COMMENT 'parallax error',
	earliestObsTime DATETIME NULL COMMENT 'first observation time',
	latestObsTime DATETIME NULL COMMENT 'last observation time',
	ugColor DOUBLE NULL COMMENT 'Precalculated color (difference between u and g).',
	grColor DOUBLE NULL COMMENT 'Precalculated color (difference between g and r).',
	riColor DOUBLE NULL COMMENT 'Precalculated color (difference between r and i).',
	izColor DOUBLE NULL COMMENT 'Precalculated color (difference between i and z).',
	zyColor DOUBLE NULL COMMENT 'Precalculated color (difference between z and y).',
	cx DOUBLE NOT NULL COMMENT 'x-component of the (RA,Dec) unit vector',
	cxErr DOUBLE NOT NULL,
	cy DOUBLE NOT NULL COMMENT 'z-component of the (RA,Dec) unit vector',
	cyErr DOUBLE NOT NULL,
	cz DOUBLE NOT NULL COMMENT 'z-component of the (RA,Dec) unit vector',
	czErr DOUBLE NOT NULL,
	flag4stage1 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	flag4stage2 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	flag4stage3 INTEGER NULL COMMENT 'Problem/special condition flag reported by one stage. FIXME: replace with real Stage name',
	isProvisional BOOL NOT NULL DEFAULT FALSE COMMENT 'If this is set to true it indicates that the object was created at the base camp. If set to false, it means it was created by Deep Detection.',
	uMag DOUBLE NULL COMMENT 'u-magnitude (weighted average)',
	uMagErr FLOAT(0) NULL COMMENT 'u-magnitude error',
	uPetroMag DOUBLE NULL COMMENT 'Petrosian flux for u filter',
	uPetroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error for u filter',
	uApMag DOUBLE NULL COMMENT 'aperture magnitude for u filter',
	uApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for u filter',
	uPosErrA FLOAT(0) NULL COMMENT 'Large dimension of the position error ellipse, assuming gaussian scatter (arcsec). For u filter',
	uPosErrB FLOAT(0) NULL COMMENT 'Small dimension of the position error ellipse, assuming gaussian scatter (arcsec).  For u filter',
	uPosErrTheta FLOAT(0) NULL COMMENT 'Orientation of the position error ellipse (degrees). For u filter',
	uNumObs INTEGER NULL COMMENT 'Number of measurements in the lightcurve for u filter.',
	uVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for u filter. Note: large photometric errors do not necessarily mean variability.',
	uAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for u filter',
	uPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for u filter',
	uIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for u filter',
	uIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for u filter',
	uIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for u filter',
	uIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for u filter',
	uIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for u fiter',
	uIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for u filter',
	uTimescale FLOAT(0) NULL COMMENT 'Characteristic timescale of flux variations (measured in days). This is to complement period for variables without a well-defined period. LSST images have sampling frequency of ~0.1Hz. For u filter',
	gMag DOUBLE NULL COMMENT 'g-magnitude (weighted average)',
	gMagErr FLOAT(0) NULL COMMENT 'g-magnitude error',
	gPetroMag DOUBLE NULL COMMENT 'Petrosian flux for g filter',
	gPetroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error filter for g filter',
	gApMag DOUBLE NULL COMMENT 'aperture magnitude for g filter',
	gApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for g filter',
	gPosErrA FLOAT(0) NULL,
	gPosErrB FLOAT(0) NULL,
	gPosErrTheta FLOAT(0) NULL,
	gNumObs INTEGER NULL,
	gVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for g filter. Note: large photometric errors do not necessarily mean variability.',
	gAmplitude FLOAT(0) NULL,
	gPeriod FLOAT(0) NULL,
	gIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for g filter',
	gIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for g filter',
	gIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for g filter',
	gIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for g filter',
	gIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for g filter',
	gIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for g filter',
	gTimescale FLOAT(0) NULL,
	rMag DOUBLE NULL COMMENT 'r-magnitude (weighted average)',
	rMagErr FLOAT(0) NULL COMMENT 'r-magnitude error',
	rPetroMag DOUBLE NULL COMMENT 'Petrosian flux for r filter',
	rPetroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error for r filter',
	rPosErrA FLOAT(0) NULL,
	rPosErrB FLOAT(0) NULL,
	rPosErrTheta FLOAT(0) NULL,
	rNumObs INTEGER NULL,
	rVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for r filter. Note: large photometric errors do not necessarily mean variability.',
	rAmplitude FLOAT(0) NULL,
	rPeriod FLOAT(0) NULL,
	rIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for r filter',
	rIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for r filter',
	rIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for r filter',
	rIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for r filter',
	rIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for r filter',
	rIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for r filter',
	rTimescale FLOAT(0) NULL,
	iMag DOUBLE NULL COMMENT 'i-magnitude (weighted average)',
	iMagErr FLOAT(0) NULL COMMENT 'i-magnitude error',
	iPetroMag DOUBLE NULL COMMENT 'Petrosian flux for i filter',
	iPetroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error for i filter',
	iPosErrA FLOAT(0) NULL,
	iPosErrB FLOAT(0) NULL,
	iPosErrTheta FLOAT(0) NULL,
	iNumObs INTEGER NULL,
	iVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for i filter. Note: large photometric errors do not necessarily mean variability.',
	iAmplitude FLOAT(0) NULL,
	iPeriod FLOAT(0) NULL,
	iIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for i filter',
	iIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for i filter',
	iIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for i filter',
	iIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for i filter',
	iIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for i filter',
	iIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for i filter',
	iTimescale FLOAT(0) NULL,
	zMag DOUBLE NULL COMMENT 'z-magnitude (weighted average)',
	zMagErr FLOAT(0) NULL COMMENT 'z-magnitude error',
	zPetroMag DOUBLE NULL COMMENT 'Petrosian flux for z filter',
	zPetroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error for z filter',
	zPosErrA FLOAT(0) NULL,
	zPosErrB FLOAT(0) NULL,
	zPosErrTheta FLOAT(0) NULL,
	zNumObs INTEGER NULL,
	zVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for z filter. Note: large photometric errors do not necessarily mean variability.',
	zAmplitude FLOAT(0) NULL,
	zPeriod FLOAT(0) NULL,
	zIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for z filter',
	zIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for z filter',
	zIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for z filter',
	zIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for z filter',
	zIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for z filter',
	zIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for z filter',
	zTimescale FLOAT(0) NULL,
	yMag DOUBLE NULL COMMENT 'y-magnitude (weighted average)',
	yMagErr FLOAT(0) NULL COMMENT 'y-magnitude error',
	yPetroMag DOUBLE NULL COMMENT 'Petrosian flux for y filter',
	yPetroMagErr DOUBLE NULL COMMENT 'Petrosian flux error for y filter',
	yPosErrA FLOAT(0) NULL,
	yPosErrB FLOAT(0) NULL,
	yPosErrTheta FLOAT(0) NULL,
	yNumObs INTEGER NULL,
	yVarProb TINYINT NULL COMMENT 'Probability of variability in % (100% = variable object) for y filter. Note: large photometric errors do not necessarily mean variability.',
	yAmplitude FLOAT(0) NULL,
	yPeriod FLOAT(0) NULL,
	yIxx FLOAT(0) NULL COMMENT 'Adaptive second moment for y filter',
	yIxxErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for y filter',
	yIyy FLOAT(0) NULL COMMENT 'Adaptive second moment for y filter',
	yIyyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for y filter',
	yIxy FLOAT(0) NULL COMMENT 'Adaptive second moment for y filter',
	yIxyErr FLOAT(0) NULL COMMENT 'Adaptive second moment uncertainty for y filter',
	yTimescale FLOAT(0) NULL,
	uScalegram01 FLOAT(0) NULL COMMENT '"Scalegram": time series as the average of the squares of the wavelet coefficients at a given scale. See Scargel et al 1993 for more details.',
	uScalegram02 FLOAT(0) NULL,
	uScalegram03 FLOAT(0) NULL,
	uScalegram04 FLOAT(0) NULL,
	uScalegram05 FLOAT(0) NULL,
	uScalegram06 FLOAT(0) NULL,
	uScalegram07 FLOAT(0) NULL,
	uScalegram08 FLOAT(0) NULL,
	uScalegram09 FLOAT(0) NULL,
	uScalegram10 FLOAT(0) NULL,
	uScalegram11 FLOAT(0) NULL,
	uScalegram12 FLOAT(0) NULL,
	uScalegram13 FLOAT(0) NULL,
	uScalegram14 FLOAT(0) NULL,
	uScalegram15 FLOAT(0) NULL,
	uScalegram16 FLOAT(0) NULL,
	uScalegram17 FLOAT(0) NULL,
	uScalegram18 FLOAT(0) NULL,
	uScalegram19 FLOAT(0) NULL,
	uScalegram20 FLOAT(0) NULL,
	uScalegram21 FLOAT(0) NULL,
	uScalegram22 FLOAT(0) NULL,
	uScalegram23 FLOAT(0) NULL,
	uScalegram24 FLOAT(0) NULL,
	uScalegram25 FLOAT(0) NULL,
	gScalegram01 FLOAT(0) NULL,
	gScalegram02 FLOAT(0) NULL,
	gScalegram03 FLOAT(0) NULL,
	gScalegram04 FLOAT(0) NULL,
	gScalegram05 FLOAT(0) NULL,
	gScalegram06 FLOAT(0) NULL,
	gScalegram07 FLOAT(0) NULL,
	gScalegram08 FLOAT(0) NULL,
	gScalegram09 FLOAT(0) NULL,
	gScalegram10 FLOAT(0) NULL,
	gScalegram11 FLOAT(0) NULL,
	gScalegram12 FLOAT(0) NULL,
	gScalegram13 FLOAT(0) NULL,
	gScalegram14 FLOAT(0) NULL,
	gScalegram15 FLOAT(0) NULL,
	gScalegram16 FLOAT(0) NULL,
	gScalegram17 FLOAT(0) NULL,
	gScalegram18 FLOAT(0) NULL,
	gScalegram19 FLOAT(0) NULL,
	gScalegram20 FLOAT(0) NULL,
	gScalegram21 FLOAT(0) NULL,
	gScalegram22 FLOAT(0) NULL,
	gScalegram23 FLOAT(0) NULL,
	gScalegram24 FLOAT(0) NULL,
	gScalegram25 FLOAT(0) NULL,
	rScalegram01 FLOAT(0) NULL,
	rScalegram02 FLOAT(0) NULL,
	rScalegram03 FLOAT(0) NULL,
	rScalegram04 FLOAT(0) NULL,
	rScalegram05 FLOAT(0) NULL,
	rScalegram06 FLOAT(0) NULL,
	rScalegram07 FLOAT(0) NULL,
	rScalegram08 FLOAT(0) NULL,
	rScalegram09 FLOAT(0) NULL,
	rScalegram10 FLOAT(0) NULL,
	rScalegram11 FLOAT(0) NULL,
	rScalegram12 FLOAT(0) NULL,
	rScalegram13 FLOAT(0) NULL,
	rScalegram14 FLOAT(0) NULL,
	rScalegram15 FLOAT(0) NULL,
	rScalegram16 FLOAT(0) NULL,
	rScalegram17 FLOAT(0) NULL,
	rScalegram18 FLOAT(0) NULL,
	rScalegram19 FLOAT(0) NULL,
	rScalegram20 FLOAT(0) NULL,
	rScalegram21 FLOAT(0) NULL,
	rScalegram22 FLOAT(0) NULL,
	rScalegram23 FLOAT(0) NULL,
	rScalegram24 FLOAT(0) NULL,
	rScalegram25 FLOAT(0) NULL,
	iScalegram01 FLOAT(0) NULL,
	iScalegram02 FLOAT(0) NULL,
	iScalegram03 FLOAT(0) NULL,
	iScalegram04 FLOAT(0) NULL,
	iScalegram05 FLOAT(0) NULL,
	iScalegram06 FLOAT(0) NULL,
	iScalegram07 FLOAT(0) NULL,
	iScalegram08 FLOAT(0) NULL,
	iScalegram09 FLOAT(0) NULL,
	iScalegram10 FLOAT(0) NULL,
	iScalegram11 FLOAT(0) NULL,
	iScalegram12 FLOAT(0) NULL,
	iScalegram13 FLOAT(0) NULL,
	iScalegram14 FLOAT(0) NULL,
	iScalegram15 FLOAT(0) NULL,
	iScalegram16 FLOAT(0) NULL,
	iScalegram17 FLOAT(0) NULL,
	iScalegram18 FLOAT(0) NULL,
	iScalegram19 FLOAT(0) NULL,
	iScalegram20 FLOAT(0) NULL,
	iScalegram21 FLOAT(0) NULL,
	iScalegram22 FLOAT(0) NULL,
	iScalegram23 FLOAT(0) NULL,
	iScalegram24 FLOAT(0) NULL,
	iScalegram25 FLOAT(0) NULL,
	zScalegram01 FLOAT(0) NULL,
	zScalegram02 FLOAT(0) NULL,
	zScalegram03 FLOAT(0) NULL,
	zScalegram04 FLOAT(0) NULL,
	zScalegram05 FLOAT(0) NULL,
	zScalegram06 FLOAT(0) NULL,
	zScalegram07 FLOAT(0) NULL,
	zScalegram08 FLOAT(0) NULL,
	zScalegram09 FLOAT(0) NULL,
	zScalegram10 FLOAT(0) NULL,
	zScalegram11 FLOAT(0) NULL,
	zScalegram12 FLOAT(0) NULL,
	zScalegram13 FLOAT(0) NULL,
	zScalegram14 FLOAT(0) NULL,
	zScalegram15 FLOAT(0) NULL,
	zScalegram16 FLOAT(0) NULL,
	zScalegram17 FLOAT(0) NULL,
	zScalegram18 FLOAT(0) NULL,
	zScalegram19 FLOAT(0) NULL,
	zScalegram20 FLOAT(0) NULL,
	zScalegram21 FLOAT(0) NULL,
	zScalegram22 FLOAT(0) NULL,
	zScalegram23 FLOAT(0) NULL,
	zScalegram24 FLOAT(0) NULL,
	zScalegram25 FLOAT(0) NULL,
	yScalegram01 FLOAT(0) NULL,
	yScalegram02 FLOAT(0) NULL,
	yScalegram03 FLOAT(0) NULL,
	yScalegram04 FLOAT(0) NULL,
	yScalegram05 FLOAT(0) NULL,
	yScalegram06 FLOAT(0) NULL,
	yScalegram07 FLOAT(0) NULL,
	yScalegram08 FLOAT(0) NULL,
	yScalegram09 FLOAT(0) NULL,
	yScalegram10 FLOAT(0) NULL,
	yScalegram11 FLOAT(0) NULL,
	yScalegram12 FLOAT(0) NULL,
	yScalegram13 FLOAT(0) NULL,
	yScalegram14 FLOAT(0) NULL,
	yScalegram15 FLOAT(0) NULL,
	yScalegram16 FLOAT(0) NULL,
	yScalegram17 FLOAT(0) NULL,
	yScalegram18 FLOAT(0) NULL,
	yScalegram19 FLOAT(0) NULL,
	yScalegram20 FLOAT(0) NULL,
	yScalegram21 FLOAT(0) NULL,
	yScalegram22 FLOAT(0) NULL,
	yScalegram23 FLOAT(0) NULL,
	yScalegram24 FLOAT(0) NULL,
	yScalegram25 FLOAT(0) NULL,
	primaryPeriod FLOAT(0) NULL COMMENT 'period that represent periods for all filters.',
	primaryPeriodErr FLOAT(0) NULL,
	rApMag DOUBLE NULL COMMENT 'aperture magnitude for r filter',
	iApMag DOUBLE NULL COMMENT 'aperture magnitude for i filter',
	zApMag DOUBLE NULL COMMENT 'aperture magnitude for z filter',
	yApMag DOUBLE NULL COMMENT 'aperture magnitude for y filter',
	rApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for r filter',
	iApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for i filter',
	zApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for z filter',
	yApMagErr FLOAT(0) NULL COMMENT 'aperture magnitude error for y filter',
	uPeriodErr FLOAT(0) NULL,
	gPeriodErr FLOAT(0) NULL,
	rPeriodErr FLOAT(0) NULL,
	iPeriodErr FLOAT(0) NULL,
	zPeriodErr FLOAT(0) NULL,
	yPeriodErr FLOAT(0) NULL,
	zone INTEGER NULL COMMENT 'zone is an index to speed up spatial queries.',
	PRIMARY KEY (objectId),
	INDEX idx_Object_ugColor (ugColor ASC),
	INDEX idx_Object_grColor (grColor ASC),
	INDEX idx_Object_riColor (riColor ASC),
	INDEX idx_Object_izColor (izColor ASC),
	INDEX idx_Object_zyColor (zyColor ASC),
	INDEX idx_Object_latestObsTime (latestObsTime ASC),
	KEY (procHistoryId)
) TYPE=MyISAM COMMENT='Description of the multi-epoch static object. (Kem: do we link Object and DIAObject tables? Right now it''s done through the source tables)';


CREATE TABLE MovingObject
(
	movingObjectId BIGINT NOT NULL COMMENT 'Moving object unique identified.',
	movingObjectVersion INT NOT NULL DEFAULT '1' COMMENT 'Version number for the moving object. Updates to orbital parameters will result in a new version (row) of the object, preserving the orbit refinement history',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to ProcessingHistory table.',
	taxonomicTypeId SMALLINT NULL COMMENT 'Pointer to ObjectType table for asteroid taxonomic type',
	ssmObjectName VARCHAR(32) NULL COMMENT 'MOPS base-64 SSM object name, included for convenience. This name can be obtained from `mops_SSM` by joining on `ssmId`',
	q DOUBLE NOT NULL COMMENT 'semi-major axis of the orbit (AU)',
	e DOUBLE NOT NULL COMMENT 'eccentricity e (dimensionless)',
	i DOUBLE NOT NULL COMMENT 'inclination of the orbit (degrees)',
	node DOUBLE NOT NULL COMMENT 'longitude of ascending node (degrees)',
	meanAnom DOUBLE NOT NULL COMMENT 'Mean anomaly of the orbit',
	argPeri DOUBLE NOT NULL COMMENT 'argument of perihelion (degrees)',
	distPeri DOUBLE NOT NULL COMMENT 'perihelion distance (AU)',
	timePeri DOUBLE NOT NULL COMMENT 'time of perihelion passage, MJD (UTC)',
	epoch DOUBLE NOT NULL COMMENT 'epoch of osculating elements, MJD (UTC)',
	h_v DOUBLE NOT NULL COMMENT 'Absolute magnitude',
	g DOUBLE NULL COMMENT 'Slope parameter g',
	rotationPeriod DOUBLE NULL COMMENT 'Rotation period, days',
	rotationEpoch DOUBLE NULL COMMENT 'Rotation time origin, MJD (UTC)',
	albedo DOUBLE NULL COMMENT 'Albedo (dimensionless)',
	poleLat DOUBLE NULL COMMENT 'Rotation pole latitude (degrees)',
	poleLon DOUBLE NULL COMMENT 'Rotation pole longitude (degrees)',
	d3 DOUBLE NULL COMMENT '3-parameter D-criterion (dimensionless) WRT SSM object',
	d4 DOUBLE NULL COMMENT '4-parameter D-criterion (dimensionless) WRT SSM object',
	orbFitResidual DOUBLE NOT NULL COMMENT 'orbit fit RMS residual (arcsec)',
	orbFitChi2 DOUBLE NULL COMMENT 'orbit fit chi-squared statistic',
	classification CHAR(1) NULL COMMENT 'MOPS efficiency classification (''C''/''M''/''B''/''N''/''X'')',
	ssmId BIGINT NULL COMMENT 'Source SSM object for C classification',
	status CHAR(1) NULL COMMENT 'NULL, or set to ''M'' when DO is merged with parent',
	stablePass CHAR(1) NULL COMMENT 'NULL, or set to ''Y'' when stable precovery pass completed',
	timeCreated TIMESTAMP NULL COMMENT 'Timestamp for row creation (this is the time of moving object creation for the first version of that object)',
	uMag DOUBLE NOT NULL COMMENT 'u-magnitude (weighted average)',
	uMagErr FLOAT(0) NOT NULL COMMENT 'u-magnitude error',
	uAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for u filter',
	uPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for u filter',
	gMag DOUBLE NOT NULL COMMENT 'g-magnitude (weighted average)',
	gMagErr FLOAT(0) NOT NULL COMMENT 'g-magnitude error',
	gAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for g filter',
	gPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for g filter',
	rMag DOUBLE NOT NULL COMMENT 'r-magnitude (weighted average)',
	rMagErr FLOAT(0) NOT NULL COMMENT 'r-magnitude error',
	rAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for r filter',
	rPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for r filter',
	iMag DOUBLE NOT NULL COMMENT 'i-magnitude (weighted average)',
	iMagErr FLOAT(0) NOT NULL COMMENT 'i-magnitude error',
	iAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for i filter',
	iPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for i filter',
	zMag DOUBLE NOT NULL COMMENT 'z-magnitude (weighted average)',
	zMagErr FLOAT(0) NOT NULL COMMENT 'z-magnitude error',
	zAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for z filter',
	zPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for z filter',
	yMag DOUBLE NOT NULL COMMENT 'y-magnitude (weighted average)',
	yMagErr FLOAT(0) NOT NULL COMMENT 'y-magnitude error',
	yAmplitude FLOAT(0) NULL COMMENT 'Characteristic magnitude scale of the flux variations for y filter',
	yPeriod FLOAT(0) NULL COMMENT 'Period of flux variations (if regular) for y filter',
	flag INTEGER NULL COMMENT 'Problem/special condition flag.',
	src01 DOUBLE NULL COMMENT 'square root of covariance EC EC (see SQL documentation)',
	src02 DOUBLE NULL COMMENT 'square root of covariance EC QR (see SQL documentation)',
	src03 DOUBLE NULL COMMENT 'square root of covariance QR QR (see SQL documentation)',
	src04 DOUBLE NULL COMMENT 'square root of covariance EC TP (see SQL documentation)',
	src05 DOUBLE NULL COMMENT 'square root of covariance QR TP (see SQL documentation)',
	src06 DOUBLE NULL COMMENT 'square root of covariance TP TP (see SQL documentation)',
	src07 DOUBLE NULL COMMENT 'square root of covariance EC OM (see SQL documentation)',
	src08 DOUBLE NULL COMMENT 'square root of covariance QR OM (see SQL documentation)',
	src09 DOUBLE NULL COMMENT 'square root of covariance TP OM (see SQL documentation)',
	src10 DOUBLE NULL COMMENT 'square root of covariance OM OM (see SQL documentation)',
	src11 DOUBLE NULL COMMENT 'square root of covariance EC W  (see SQL documentation)',
	src12 DOUBLE NULL COMMENT 'square root of covariance QR W  (see SQL documentation)',
	src13 DOUBLE NULL COMMENT 'square root of covariance TP W  (see SQL documentation)',
	src14 DOUBLE NULL COMMENT 'square root of covariance OM W  (see SQL documentation)',
	src15 DOUBLE NULL COMMENT 'square root of covariance W  W  (see SQL documentation)',
	src16 DOUBLE NULL COMMENT 'square root of covariance EC IN (see SQL documentation)',
	src17 DOUBLE NULL COMMENT 'square root of covariance QR IN (see SQL documentation)',
	src18 DOUBLE NULL COMMENT 'square root of covariance TP IN (see SQL documentation)',
	src19 DOUBLE NULL COMMENT 'square root of covariance OM IN (see SQL documentation)',
	src20 DOUBLE NULL COMMENT 'square root of covariance W  IN (see SQL documentation)',
	src21 DOUBLE NULL COMMENT 'square root of covariance IN IN (see SQL documentation)',
	convCode VARCHAR(8) NULL COMMENT 'JPL convergence code',
	o_minus_c DOUBLE NULL COMMENT 'Vestigial observed-computed position, essentially RMS residual',
	moid1 DOUBLE NULL COMMENT 'Minimum orbital intersection distance (MOID) solution 1',
	moidLong1 DOUBLE NULL COMMENT 'Longitude of MOID 1',
	moid2 DOUBLE NULL COMMENT 'Minimum orbital intersection distance (MOID) solution 2',
	moidLong2 DOUBLE NULL COMMENT 'Longitude of MOID 2',
	arcLengthDays DOUBLE NULL COMMENT 'Arc length of detections used to compute orbit',
	PRIMARY KEY (movingObjectId, movingObjectVersion),
	KEY (procHistoryId),
	INDEX idx_MovingObject_taxonomicTypeId (taxonomicTypeId ASC),
	INDEX idx_MovingObject_ssmId (ssmId ASC),
	INDEX idx_MovingObject_ssmObjectName (ssmObjectName ASC),
	INDEX idx_MovingObject_status (status ASC)
)  COMMENT='Table to store description of the Solar System (moving) Objects.';


CREATE TABLE Raw_CCD_Exposure
(
	ccdExposureId BIGINT NOT NULL COMMENT 'Unique id',
	exposureId INTEGER NOT NULL COMMENT 'Pointer to the Exposure that this CCDExposure belongs to',
	procHistoryId INTEGER NULL COMMENT 'Pointer to ProcessingHistory. Valid if all pieces processed with the same processing history (all AmpExposures). If different processing histories used, then NULL',
	filterId TINYINT NOT NULL,
	visitId INTEGER NULL,
	ra DOUBLE NOT NULL COMMENT 'Right Ascension of aperture center.',
	decl DOUBLE NOT NULL COMMENT 'Declination of aperture center.',
	equinox FLOAT(0) NOT NULL COMMENT 'Equinox of World Coordinate System.',
	url VARCHAR(255) NOT NULL COMMENT 'Logical URL to the corresponding image file.',
	ctype1 VARCHAR(20) NOT NULL COMMENT 'Coordinate projection type, axis 1.',
	ctype2 VARCHAR(20) NOT NULL COMMENT 'Coordinate projection type, axis 2.',
	crpix1 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 1.',
	crpix2 FLOAT(0) NOT NULL COMMENT 'Coordinate reference pixel, axis 2.',
	crval1 DOUBLE NOT NULL COMMENT 'Coordinate value 1 @reference pixel.',
	crval2 DOUBLE NOT NULL COMMENT 'Coordinate value 2 @reference pixel.',
	cd11 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 1.',
	cd21 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 1.',
	cd12 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 1 w.r.t. axis 2.',
	cd22 DOUBLE NOT NULL COMMENT 'First derivative of coordinate 2 w.r.t. axis 2.',
	dateObs DATETIME NOT NULL COMMENT 'Date/Time of observation start (UTC).',
	taiObs DATETIME NULL COMMENT 'TAI-OBS = UTC + offset. Offset = 32 s from  1/1/1999 to 1/1/2006, = 33 s after 1/1/2006.',
	mjdObs DOUBLE NULL COMMENT 'MJD of observation start.',
	expTime FLOAT(0) NOT NULL COMMENT 'Duration of exposure.',
	darkTime FLOAT(0) NULL COMMENT 'Total elapsed time from exposure start to end of read.',
	zd FLOAT(0) NOT NULL COMMENT 'Zenith distance at observation mid-point.',
	airmass FLOAT(0) NULL COMMENT 'Airmass value for the Amp reference pixel (preferably center, but not guaranteed).',
	PRIMARY KEY (ccdExposureId),
	UNIQUE UQ_Raw_CCD_Exposure_visitId(visitId),
	KEY (exposureId),
	KEY (procHistoryId)
) ;


CREATE TABLE Raw_Amp_Exposure
(
	ampExposureId BIGINT NOT NULL,
	amplifierId SMALLINT NOT NULL COMMENT 'Pointer to Amplifier table - this identifies which amplifier this AmpExposure corresponds to.',
	ccdExposureId BIGINT NOT NULL COMMENT 'Pointer to CCDExposure that contains this AmpExposure',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to an entry in ProcessingHistory table.',
	binX SMALLINT NULL COMMENT 'binning in X-coordinate',
	binY SMALLINT NULL COMMENT 'binning in Y-coordinate',
	sizeX SMALLINT NULL COMMENT 'Size of the image in X-direction (along rows; binned pixels). Ignores overscan but includes regions that may be considered outside of the data portion of the image.',
	sizeY SMALLINT NULL COMMENT 'Size of the image in Y-direction (along columns; binned pixels). Ignores overscan but includes regions that may be considered outside of the data portion of the image.',
	taiObs DATETIME NULL COMMENT 'time of shutter open (international atomic time)',
	expTime FLOAT(0) NULL COMMENT 'Exposure time for this particular Amplifier. We are not certain yet that exposure times will be identical for all Amplifiers [FIXME] ',
	bias FLOAT(0) NOT NULL COMMENT 'Bias level for the calibrated image (ADUs).',
	gain FLOAT(0) NOT NULL COMMENT 'Gain value for the amplifier (e/ADU).',
	rdNoise FLOAT(0) NOT NULL COMMENT 'Read noise value for this AmpExposure (measured in electrons).',
	telAngle FLOAT(0) NOT NULL COMMENT 'Orientation angle of the telescope w.r.t sky (degrees).  Note: This is different from camera orientation w.r.t sky (encapsulated in WCS), since telescope is on alt-az mount.',
	az FLOAT(0) NULL COMMENT 'Azimuth of observation (deg), preferably at center of exposure at center of image and including refraction correction, but none of this is guaranteed',
	alt FLOAT(0) NULL COMMENT 'Altitude of observation (deg), preferably at center of observation at center of image and including refraction correction, but none of this is guaranteed',
	flag SMALLINT NULL COMMENT 'Flags to indicate a problem/special condition with the AmpExposure (e.g. hardware, weather, etc)',
	zpt DOUBLE NULL COMMENT 'Photometric zero point magnitude.',
	zptErr FLOAT(0) NULL COMMENT 'Error of zero point magnitude.',
	sky FLOAT(0) NOT NULL COMMENT 'The average sky level in the frame (ADU).',
	skySig FLOAT(0) NULL COMMENT 'Sigma of distribution of sky values',
	skyErr FLOAT(0) NULL COMMENT 'Error of the average sky value',
	psf_nstar INTEGER NULL COMMENT 'Number of stars used for PSF measurement',
	psf_apcorr FLOAT(0) NULL COMMENT 'Photometric error due to imperfect PSF model (aperture correction)',
	psf_sigma1 FLOAT(0) NULL COMMENT 'Inner Gaussian sigma for the composite fit (XXX)',
	psf_sigma2 FLOAT(0) NULL COMMENT 'Outer Gaussian sigma for the composite fit (XXX)',
	psf_b FLOAT(0) NULL COMMENT 'Ratio of inner PSF to outer PSF (XXX)',
	psf_b_2G FLOAT(0) NULL COMMENT 'Ratio of Gaussian 2 to Gaussian 1 at origin (XXX)',
	psf_p0 FLOAT(0) NULL COMMENT 'The value of the power law at the origin (XXX)',
	psf_beta FLOAT(0) NULL COMMENT 'The slope of the power law (XXX)',
	psf_sigmap FLOAT(0) NULL COMMENT 'Width parameter for the power law (XXX)',
	psf_nprof INTEGER NULL COMMENT 'Number of profile bins (XXX?)',
	psf_fwhm FLOAT(0) NOT NULL COMMENT 'Effective PSF width.',
	psf_sigma_x FLOAT(0) NULL,
	psf_sigma_y FLOAT(0) NULL,
	psf_posAngle FLOAT(0) NULL,
	psf_peak FLOAT(0) NULL,
	psf_x0 FLOAT(0) NULL,
	psf_x1 FLOAT(0) NULL,
	radesys VARCHAR(5) NULL COMMENT 'Type of WCS used. Obsolete in ICRS',
	equinox FLOAT(0) NOT NULL COMMENT 'Equinox of the WCS. Obsolete in ICRS',
	ctype1 VARCHAR(20) NOT NULL COMMENT 'Coordinate type (axis 1). Obsolete in ICRS',
	ctype2 VARCHAR(20) NOT NULL COMMENT 'Coordinate type (axis 2). Obsolete in ICRS',
	cunit1 VARCHAR(10) NULL COMMENT 'X axis units',
	cunit2 VARCHAR(10) NULL COMMENT 'Y axis units',
	crpix1 FLOAT(0) NOT NULL COMMENT 'Pixel X-coordinate for reference pixel',
	crpix2 FLOAT(0) NOT NULL COMMENT 'Pixel Y-coordinate for reference pixel',
	crval1 FLOAT(0) NOT NULL COMMENT 'Sky coordinate (longitude) for reference pixel (degrees)',
	crval2 FLOAT(0) NOT NULL COMMENT 'Sky coordinate (latitude) for reference pixel (degrees)',
	cd11 FLOAT(0) NOT NULL COMMENT 'WCS transformation matrix element (_11)',
	cd12 FLOAT(0) NOT NULL COMMENT 'WCS transformation matrix element (_12)',
	cd21 FLOAT(0) NOT NULL COMMENT 'WCS transformation matrix element (_21)',
	cd22 FLOAT(0) NOT NULL COMMENT 'WCS transformation matrix element (_22)',
	cdelt1 FLOAT(0) NULL COMMENT 'Obsolete by cd_xx terms?',
	cdelt2 FLOAT(0) NULL COMMENT 'Obsolete by cd_xx terms?',
	PRIMARY KEY (ampExposureId),
	KEY (amplifierId),
	KEY (ccdExposureId),
	KEY (procHistoryId)
)  COMMENT='Table to store per-exposure information for every Amplifier. 
 tai+texp also added to this table, because there might be difference in the way focal plane is illuminated (finite shutter speed) leading to differences in exposure time between CCDs. 
 ISSUE: binX, binY, sizeX, sizeY can be dropped if we know for sure we never going to use pixel binning in LSST (confirm).';


CREATE TABLE _Science_FPA_Exposure2TemplateImage
(
	exposureId BIGINT NOT NULL COMMENT 'Pointer to an entry in Exposure table.',
	templateImageId INTEGER NOT NULL COMMENT 'Pointer to an entry in TemplateImage table.',
	KEY (templateImageId),
	KEY (exposureId)
)  COMMENT='Mapping table: exposures used to build given template image';


CREATE TABLE _FPA_Fringe2CMExposure
(
	biasExposureId INTEGER NOT NULL COMMENT 'Pointer to BiasExposure table.',
	darkExposureId INTEGER NOT NULL COMMENT 'Pointer to DarkExposure table.',
	flatExposureId INTEGER NOT NULL COMMENT 'Pointer to FlatExposure table.',
	cmFringeExposureId INTEGER NOT NULL COMMENT 'Pointer to CMFringeExposure table.',
	KEY (biasExposureId),
	KEY (cmFringeExposureId),
	KEY (darkExposureId),
	KEY (flatExposureId)
)  COMMENT='Mapping table. Keeps information which FlatExposures are part of CalibratedMasterFringeExposure, and which BiasExposures & Dark Exposures were used to generate the CalibratedMasterFringeExposures.';


CREATE TABLE _FPA_Flat2CMExposure
(
	flatExposureId INTEGER NOT NULL COMMENT 'Pointer to FlatExposure table.',
	biasExposureId INTEGER NOT NULL COMMENT 'Pointer to BiasExposure table.',
	darkExposureId INTEGER NOT NULL COMMENT 'Pointer to DarkExposure table.',
	cmFlatExposureId INTEGER NOT NULL COMMENT 'Pointer to CMFlatExposure table',
	KEY (biasExposureId),
	KEY (cmFlatExposureId),
	KEY (darkExposureId),
	KEY (flatExposureId)
)  COMMENT='Mapping table. Keeps information which FlatExposures are part of CalibratedMasterFlatExposure, and which BiasExposures & Dark Exposures were used to generate the CalibratedMasterFlatExposures.';


CREATE TABLE _FPA_Dark2CMExposure
(
	darkExposureId INTEGER NOT NULL COMMENT 'Pointer to DarkExposure table.',
	biasExposureId INTEGER NOT NULL COMMENT 'Pointer to BiasExposure table.',
	cmDarkExposureId INTEGER NOT NULL COMMENT 'Pointer to CMDarkExposure table.',
	KEY (biasExposureId),
	KEY (cmDarkExposureId),
	KEY (darkExposureId)
)  COMMENT='Mapping table. Keeps information which DarkExposures are part of CalibratedMasterDarkExposure, and which BiasExposures were used to generate the CalibratedMasterDarkExposures.';


CREATE TABLE _FPA_Bias2CMExposure
(
	biasExposureId INTEGER NOT NULL COMMENT 'Pointer to BiasExposure table.',
	cmBiasExposureId INTEGER NOT NULL COMMENT 'Pointer to CMBiasExposure table.',
	KEY (biasExposureId),
	KEY (cmBiasExposureId)
)  COMMENT='Mapping table. Keeps information which BiasExposures are part of CalibratedMasterBiasExposure.';


CREATE TABLE _aux_Science_FPA_Exposure_Group
(
	dummy INTEGER NULL
) ;


CREATE TABLE prv_Snapshot
(
	snapshotId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to an entry in ProcessingHistory table',
	snapshotDescr VARCHAR(255) NULL,
	PRIMARY KEY (snapshotId),
	KEY (procHistoryId)
)  COMMENT='Table for saving significant snapshots (for example ProcessingHistory used to produce a data release)';


CREATE TABLE prv_cnf_MaskAmpImage
(
	cMaskAmpImageId BIGINT NOT NULL COMMENT 'Unique id.',
	amplifierId SMALLINT NOT NULL COMMENT 'Pointer to Amplifier table - this determines which amplifier this config is used for.',
	url VARCHAR(255) NULL COMMENT 'Logical URL to the MaskIage file corresponding to a given amplifier.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cMaskAmpImageId),
	KEY (amplifierId)
) ;


CREATE TABLE prv_cnf_Amplifier
(
	cAmplifierId SMALLINT NOT NULL COMMENT 'Unique id.',
	amplifierId SMALLINT NOT NULL COMMENT 'Pointer to Amplifier table - amplifier that this config corresponds to.',
	serialNumber VARCHAR(40) NULL COMMENT 'FIXME: Not sure what the type should be',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cAmplifierId),
	KEY (amplifierId)
) TYPE=MyISAM COMMENT='Table to store amplifier configuration. One row = hardware configuration of one amplifier';


CREATE TABLE Visit
(
	visitId INTEGER NOT NULL,
	exposureId INTEGER NOT NULL,
	KEY (exposureId)
)  COMMENT='Defines a single Visit. 1 row per LSST visit.';


CREATE TABLE Science_FPA_Exposure
(
	cseId INTEGER NOT NULL COMMENT 'Unique id.',
	exposureId BIGINT NOT NULL COMMENT 'Pointer to Exposure table. This also identifies Calibration_FPA_Exposure used to calibrated this exposure.',
	subtractedExposureId INTEGER NOT NULL COMMENT 'Pointer to an entry in the Exposure table - a subtracted exposure.',
	varianceExposureId INTEGER NOT NULL COMMENT 'Pointer to an entry in the Exposure table - a variance exposure.',
	cseGroupId MEDIUMINT NOT NULL COMMENT 'Pointer to ScienceFPAExposure_Group table. There will be many ScienceFPAExposure entries with the same set of values, so it makes sense to normalize this and store as one entry in a separate table.',
	PRIMARY KEY (cseId),
	UNIQUE UQ_Science_FPA_Exposure_exposureId(exposureId),
	KEY (exposureId),
	KEY (subtractedExposureId),
	KEY (varianceExposureId),
	KEY (cseGroupId)
)  COMMENT='Image metadata for the science calibrated exposure';


CREATE TABLE Calibration_FPA_Exposure
(
	exposureId INTEGER NOT NULL COMMENT 'Id of corresponding exposure in the FPA_Exposure table',
	PRIMARY KEY (exposureId),
	KEY (exposureId)
) ;


CREATE TABLE Flat_FPA_Exposure
(
	flatExposureId INTEGER NOT NULL COMMENT 'Corresponds to exposureId from Exposure table',
	filterId TINYINT NOT NULL COMMENT 'Pointer to Filter table - filter used to take this exposure',
	averPixelValue FLOAT(0) NULL,
	stdevPixelValue FLOAT(0) NULL COMMENT 'standard deviation',
	wavelength FLOAT(0) NULL,
	type TINYINT NULL COMMENT 'FIXME: convert type to ENUM: ''sky'', ''dome''',
	PRIMARY KEY (flatExposureId),
	KEY (flatExposureId)
)  COMMENT='Table for keeping (individual) FlatExposures. Coadded FlatExposures are kept in CMFlatExposure table.';


CREATE TABLE Dark_FPA_Exposure
(
	darkExposureId INTEGER NOT NULL COMMENT 'Corresponds to exposureId from Exposure table.',
	averPixelValue FLOAT(0) NULL,
	stdevPixelValue FLOAT(0) NULL COMMENT 'standard deviation',
	PRIMARY KEY (darkExposureId),
	KEY (darkExposureId)
)  COMMENT='Table for keeping (individual) DarkExposures. Coadded DarkExposures are kept in CMDarkExposure table.';


CREATE TABLE Bias_FPA_Exposure
(
	biasExposureId INTEGER NOT NULL COMMENT 'Corresponds to exposureId from Exposure table',
	averPixelValue FLOAT(0) NULL,
	stdevPixelValue FLOAT(0) NULL COMMENT 'standard deviation',
	PRIMARY KEY (biasExposureId),
	KEY (biasExposureId)
)  COMMENT='Table for keeping (individual) BiasExposures. Coadded BiasExposures are kept in CMBiasExposure table.';


CREATE TABLE _Source2Object
(
	objectId BIGINT NOT NULL COMMENT 'Id of the object - pointer to a row in the Object table',
	sourceId BIGINT NOT NULL COMMENT 'Id of source - pointer to a row in the Source table',
	splitPercentage TINYINT NOT NULL COMMENT 'percentage of the split (all for a given source must add up to 100%',
	INDEX idx_Source2Object_objectId (objectId ASC),
	INDEX idx_Source2Object_sourceId (sourceId ASC)
)  COMMENT='Table used to store mapping Source --> Object for sources that belong to more than one object (Objects that "split"). If a source corresponds to only one object, objectId is used. See http://lsstdev.ncsa.uiuc.edu:8100/trac/wiki/dbObjectSplits for further details.';


CREATE TABLE aux_Fringe_FPA_CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Flat_FPA_CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Dark_FPA_CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Bias_FPA_CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE prv_ProcHistory
(
	procHistoryId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (procHistoryId)
)  COMMENT='Table keeps track of processing history. One row represents one batch of objects and/or sources and/or diasources and/or moving objects that were processed together. For each such group the table keeps track which Stage run, and time when the processing started. There is an assumption that configuration does not changes when during processing';


CREATE TABLE prv_cnf_CCD
(
	cCCDId SMALLINT NOT NULL COMMENT 'Unique id.',
	ccdId SMALLINT NOT NULL COMMENT 'Pointer to CCD table - ccd that this configuration corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cCCDId),
	KEY (ccdId)
)  COMMENT='Table to store ccd configuration. One row = hardware configuration of one ccd';


CREATE TABLE prv_Amplifier
(
	amplifierId SMALLINT NOT NULL,
	ccdId SMALLINT NULL COMMENT 'Pointer to CCD this amplifier belongs to',
	amplifierDescr VARCHAR(80) NULL,
	PRIMARY KEY (amplifierId),
	KEY (ccdId)
)  COMMENT='One entry per amplifier "slot"';


CREATE TABLE prv_cnf_Stage2Pipeline
(
	cStage2PipelineId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	stage2pipelineId MEDIUMINT NOT NULL COMMENT 'Pointer to entry in Stage2Pipeline that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cStage2PipelineId),
	KEY (stage2pipelineId)
) ;


CREATE TABLE prv_cnf_Pipeline2Run
(
	cPipeline2RunId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	pipeline2runId MEDIUMINT NOT NULL COMMENT 'Pointer to entry in Pipeline2Run table that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cPipeline2RunId),
	KEY (pipeline2runId)
) ;


CREATE TABLE Source
(
	sourceId BIGINT NOT NULL COMMENT 'Unique id.',
	ampExposureId BIGINT NULL COMMENT 'Pointer to Amplifier where source was measured. If the Source belongs to multiple AmpExposures, then table Source2AmpExposure is used, and this pointer is NULL',
	filterId TINYINT NOT NULL COMMENT 'Pointer to an entry in Filter table: filter used to take Exposure where this Source (or these Sources) were measured.',
	objectId BIGINT NULL COMMENT 'Pointer to Object table. Might be NULL (each Source will point to either MovingObject or Object)',
	movingObjectId BIGINT NULL COMMENT 'Pointer to MovingObject table. Might be NULL (each Source will point to either MovingObject or Object)',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to an entry in ProcessingHistory table.',
	ra DOUBLE NOT NULL COMMENT 'RA-coordinate of the source centroid (degrees). Need to support accuracy ~0.0001 arcsec',
	decl DOUBLE NOT NULL COMMENT 'Dec coordinate of the source centroid (degrees). Need to support accuracy ~0.0001 arcsec',
	__zoneId_placeholder INTEGER NULL,
	raErr4wcs FLOAT(0) NOT NULL COMMENT 'Error in centroid RA coordinate (miliarcsec) coming from WCS Stage.',
	decErr4wcs FLOAT(0) NOT NULL COMMENT 'Error in centroid Dec coordinate (miliarcsec) coming from WCS Stage.',
	raErr4detection FLOAT(0) NULL COMMENT 'Error in centroid RA coordinate (miliarcsec) coming from Detection Pipeline [FIXME, maybe use Stage name here?].',
	decErr4detection FLOAT(0) NULL COMMENT 'Error in centroid Dec coordinate (miliarcsec) coming from Detection Pipeline [FIXME, maybe use Stage name here?].',
	row DOUBLE NOT NULL COMMENT 'Pixel coordinate (Y) of the source centroid.',
	col DOUBLE NOT NULL COMMENT 'Pixel coordinate (X) of the source centroid.',
	rowErr FLOAT(0) NOT NULL COMMENT 'Error in pixel Y-coordinate.',
	colErr FLOAT(0) NOT NULL COMMENT 'Error in pixel X-coordinate.',
	cx DOUBLE NOT NULL COMMENT 'x-component of the (RA,Dec) unit vector',
	cy DOUBLE NOT NULL COMMENT 'y-component of the (RA,Dec) unit vector',
	cz DOUBLE NOT NULL COMMENT 'z-component of the (RA,Dec) unit vector',
	taiMidPoint DOUBLE NOT NULL COMMENT 'If a DIASource corresponds to a single exposure, taiMidPoint represents tai time of the middle of exposure. For multiple exposures, this is middle of beginning-of-first-exposure to end-of-last-exposure',
	taiRange FLOAT(0) NULL COMMENT 'If a DIASource corresponds to a single exposure, taiRange equals to exposure length. If DIASoure corresponds to multiple exposures, it taiRange equals to end-of-last-exposure minus beginning-of-first-exposure',
	fwhmA FLOAT(0) NOT NULL COMMENT 'Size of the object along major axis (pixels).',
	fwhmB FLOAT(0) NOT NULL COMMENT 'Size of the object along minor axis (pixels).',
	fwhmTheta FLOAT(0) NOT NULL COMMENT 'Position angle of the major axis w.r.t. X-axis (measured in degrees).',
	psfMag DOUBLE NOT NULL COMMENT 'PSF magnitude of the object',
	psfMagErr FLOAT(0) NOT NULL COMMENT 'Uncertainty of PSF magnitude',
	apMag DOUBLE NOT NULL COMMENT 'Aperture magnitude',
	apMagErr FLOAT(0) NOT NULL COMMENT 'Uncertainty of aperture magnitude',
	modelMag DOUBLE NOT NULL COMMENT 'model magnitude (adaptive 2D gauss)',
	modelMagErr FLOAT(0) NOT NULL COMMENT 'Uncertainly of model magnitude.',
	petroMag DOUBLE NULL COMMENT 'Petrosian flux',
	petroMagErr FLOAT(0) NULL COMMENT 'Petrosian flux error',
	apDia FLOAT(0) NULL COMMENT 'Diameter of aperture (pixels)',
	snr FLOAT(0) NOT NULL COMMENT 'Signal-to-Noise Ratio for the PSF optimal filter.',
	chi2 FLOAT(0) NOT NULL COMMENT 'Chi-square value for the PSF fit',
	sky FLOAT(0) NULL,
	skyErr FLOAT(0) NULL,
	moment0 FLOAT(0) NULL COMMENT 'Sum of all flux of all pixels that belong to a source. PLACEHOLDER',
	moment1_x FLOAT(0) NULL COMMENT 'Center of light - x component. PLACEHOLDER',
	moment1_y FLOAT(0) NULL COMMENT 'Center of light - y component. PLACEHOLDER',
	moment2_xx FLOAT(0) NULL COMMENT 'Standard deviation about center of light - xx component. PLACEHOLDER',
	moment2_xy FLOAT(0) NULL COMMENT 'Standard deviation about center of light - xy component. PLACEHOLDER',
	moment2_yy FLOAT(0) NULL COMMENT 'Standard deviation about center of light - yy component. PLACEHOLDER',
	moment3_xxx FLOAT(0) NULL COMMENT 'Skewness of the profile - xxx component. PLACEHOLDER',
	moment3_xxy FLOAT(0) NULL COMMENT 'Skewness of the profile - xxy component. PLACEHOLDER',
	moment3_xyy FLOAT(0) NULL COMMENT 'Skewness of the profile - xyy component. PLACEHOLDER',
	moment3_yyy FLOAT(0) NULL COMMENT 'Skewness of the profile - yyy component. PLACEHOLDER',
	moment4_xxxx FLOAT(0) NULL COMMENT 'Kurtosis - xxxx component. PLACEHOLDER',
	moment4_xxxy FLOAT(0) NULL COMMENT 'Kurtosis - xxxy component. PLACEHOLDER',
	moment4_xxyy FLOAT(0) NULL COMMENT 'Kurtosis - xxyy component. PLACEHOLDER',
	moment4_xyyy FLOAT(0) NULL COMMENT 'Kurtosis - xyyy component. PLACEHOLDER',
	moment4_yyyy FLOAT(0) NULL COMMENT 'Kurtosis - yyyy component. PLACEHOLDER',
	flag4association SMALLINT NULL COMMENT 'FIXME: likely we should use a Stage name here',
	flag4detection SMALLINT NULL COMMENT 'FIXME: likely we should use a Stage name here',
	flag4wcs SMALLINT NULL COMMENT 'Problem/special conditions indicator (Kem noted that these flags could include delta_sky, delta_PSF, ...). FIXME: likely we should use a Stage name here',
	PRIMARY KEY (sourceId),
	KEY (ampExposureId),
	KEY (filterId),
	KEY (movingObjectId),
	KEY (objectId),
	KEY (procHistoryId)
) TYPE=MyISAM COMMENT='Table to store all sources from static (not DIA) photometry pipelines.';


CREATE TABLE Raw_FPA_Exposure
(
	exposureId INTEGER NOT NULL COMMENT 'Unique id of an exposure. At most, there will be roughly 10^7 entries in this table: (3000 per night X 300 nights X 10 years).',
	filterId TINYINT NOT NULL COMMENT 'Pointer to Filter table - filter used when this exposure was taken.',
	procHistoryId INTEGER NULL COMMENT 'Pointer to ProcessingHistory. Valid if all pieces processed with the same processing history (all AmpExposures and all CCDExposures). If different processing histories used, then NULL',
	ra DOUBLE NOT NULL,
	decl DOUBLE NOT NULL,
	obsDate DATETIME NOT NULL COMMENT 'When image was taken (observation start). Note: datetime type does not have fractional seconds!',
	tai DOUBLE NOT NULL COMMENT 'time of shutter open (observation start), international atomic time.',
	taiDark DOUBLE NULL COMMENT 'time of shutter closed (during the exposure, if there was such an occasion; eg due to clowds. See Kem). International atomic time. There also could be a situation when the shutter was closed and reopened multiple times during the exposure. In this case, a more complicated data structure is needed?',
	azimuth FLOAT(0) NULL COMMENT '[in degrees]',
	elevation FLOAT(0) NULL COMMENT '[in degrees]',
	temperature FLOAT(0) NULL COMMENT '[in Celsius]',
	texp FLOAT(0) NOT NULL COMMENT 'Exposure time (total length of integration), sec.',
	flag SMALLINT NULL COMMENT 'Flag to indicate a problem/special condition with the image (e.g. hardware, weather, etc).',
	ra_ll DOUBLE NOT NULL COMMENT 'ra for the low-left corner. We will probably do something more fancy than that in the real system...',
	dec_ll DOUBLE NOT NULL COMMENT 'del for the low-left corner. We will probably do something more fancy than that in the real system...',
	ra_lr DOUBLE NOT NULL COMMENT 'ra for the low-right corner. We will probably do something more fancy than that in the real system...',
	dec_lr DOUBLE NOT NULL COMMENT 'dec for the low-right corner. We will probably do something more fancy than that in the real system...',
	ra_ul DOUBLE NOT NULL COMMENT 'ra for the upper-left corner. We will probably do something more fancy than that in the real system...',
	dec_ul DOUBLE NOT NULL COMMENT 'dec for the upper-left corner. We will probably do something more fancy than that in the real system...',
	ra_ur DOUBLE NOT NULL COMMENT 'ra for the upper-right corner. We will probably do something more fancy than that in the real system...',
	dec_ur DOUBLE NOT NULL COMMENT 'dec for the upper-right corner. We will probably do something more fancy than that in the real system...',
	PRIMARY KEY (exposureId),
	KEY (filterId),
	KEY (procHistoryId)
) TYPE=MyISAM COMMENT='Table to store information about raw image metadata for the entire Focal Plane Assembly. Contains information from FITS header. 
 ISSUE: For such a large FOV, do we expect amp-to-amp differences in texp, because shutter moves with finite speed?  If yes, texp and potentially mjd, etc should be moved further down the image hierarchy. 
 ISSUE: To take previous issue even further: do we expect differences in integration time source-to-source, depending on their focal plane position?';


CREATE TABLE _aux_FPA_Fringe2CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE _aux_FPA_Flat2CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE _aux_FPA_Dark2CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE _aux_FPA_Bias2CMExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE prv_Stage2ProcHistory
(
	stageId SMALLINT NOT NULL COMMENT 'Pointer to an entry in prv_Stage table.',
	procHistoryId INTEGER NOT NULL COMMENT 'Pointer to ProcessingHistory',
	stageStart DATETIME NULL COMMENT 'Time when stage started.',
	stageEnd DATETIME NULL COMMENT 'Time when stage finished.',
	KEY (stageId),
	KEY (procHistoryId)
)  COMMENT='Table that keeps information which Stages belong to given processing history';


CREATE TABLE prv_cnf_Telescope
(
	cTelescopeId SMALLINT NOT NULL COMMENT 'Unique id.',
	telescopeId TINYINT NOT NULL COMMENT 'Pointer to Telescope table - telescope that this configuration corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cTelescopeId),
	KEY (telescopeId)
) ;


CREATE TABLE prv_cnf_Raft
(
	cRaftId TINYINT NOT NULL COMMENT 'Unique id.',
	raftId SMALLINT NOT NULL COMMENT 'Pointer to Raft table - raft that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cRaftId),
	KEY (raftId)
)  COMMENT='Table to store raft configuration. One row = hardware configuration of one raft';


CREATE TABLE prv_cnf_Filter
(
	cFilterId TINYINT NOT NULL COMMENT 'Unique id.',
	filterId TINYINT NOT NULL COMMENT 'Pointer to Filter table - filter that this configuration corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cFilterId),
	KEY (filterId)
)  COMMENT='Table to store filter configuration. One row = one physical filter. If a filter is replaced, a new entry should be created here';


CREATE TABLE prv_CCD
(
	ccdId SMALLINT NOT NULL COMMENT 'Unique id',
	raftId SMALLINT NOT NULL COMMENT 'Pointer to raft owning this ccd',
	amp01 SMALLINT NOT NULL,
	amp02 SMALLINT NOT NULL,
	amp03 SMALLINT NOT NULL,
	amp04 SMALLINT NOT NULL,
	amp05 SMALLINT NOT NULL,
	amp06 SMALLINT NOT NULL,
	amp07 SMALLINT NOT NULL,
	amp08 SMALLINT NOT NULL,
	amp09 SMALLINT NOT NULL,
	amp10 SMALLINT NOT NULL,
	PRIMARY KEY (ccdId),
	KEY (raftId)
)  COMMENT='Table that keeps assignment of Amplifier slots to CCD. 1 row = assignment for one CCD';


CREATE TABLE prv_Stage2Pipeline
(
	stage2pipelineId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	pipelineId TINYINT NOT NULL COMMENT 'Pointer to an entry in Pipeline table.',
	stageId SMALLINT NOT NULL COMMENT 'Pointer to an entry in Stage table.',
	PRIMARY KEY (stage2pipelineId),
	KEY (pipelineId),
	KEY (stageId)
)  COMMENT='Mapping table. Keep tracks of mapping which ProcessingSteps are part of a given Pipeline and during what time period given configuration was valid.';


CREATE TABLE prv_Pipeline2Run
(
	pipeline2runId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	runId MEDIUMINT NOT NULL COMMENT 'Pointer to Run table',
	pipelineId TINYINT NOT NULL COMMENT 'Pointer to Pipeline table.',
	PRIMARY KEY (pipeline2runId),
	KEY (pipelineId),
	KEY (runId)
)  COMMENT='Mapping table. Keep tracks of mapping which Pipelines are part of a given Run, and during what time period given configuration was valid.';


CREATE TABLE prv_cnf_Stage2Slice
(
	cStage2SliceId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	stage2sliceId MEDIUMINT NOT NULL COMMENT 'Pointer to an entry in Stage2SliceId that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cStage2SliceId),
	KEY (stage2sliceId)
) ;


CREATE TABLE prv_cnf_Slice
(
	nodeId SMALLINT NOT NULL COMMENT 'Pointer to a node that this given slice runs on.',
	sliceId MEDIUMINT NOT NULL COMMENT 'Pointer to an entry in Slice table that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	KEY (nodeId),
	KEY (sliceId)
) ;


CREATE TABLE prv_cnf_Node
(
	cNodeId INTEGER NOT NULL COMMENT 'Unique id.',
	nodeId SMALLINT NOT NULL COMMENT 'Pointer to Node table - node that this configuration corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cNodeId),
	KEY (nodeId)
) ;


CREATE TABLE _Science_FPA_Exposure_Group
(
	cseGroupId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	darkTime DATETIME NULL COMMENT 'Timestamp when corresponding CMDarkExposure was processed.',
	biasTime DATETIME NULL COMMENT 'Timestamp when corresponding CMBiasExposure was processed.',
	u_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For u filter.',
	g_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For g filter.',
	r_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For r filter.',
	i_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For i filter.',
	z_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For z filter.',
	y_fringeTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFringeExposure was processed. For y filter.',
	u_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For u filter.',
	g_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For g filter.',
	r_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For r filter.',
	i_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For i filter.',
	z_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For z filter.',
	y_flatTime DATETIME NULL COMMENT 'Timestamp when corresponding CMFlatExposure was processed. For y filter.',
	cmBiasExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterBiasExposure.',
	cmDarkExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterDarkExposure.',
	u_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for u filter.',
	g_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for g filter.',
	r_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for r filter.',
	i_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for i filter.',
	z_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for z filter.',
	y_cmFlatExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFlatExposure for y filter.',
	u_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for u filter.',
	g_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for g filter.',
	r_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for r filter.',
	i_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for i filter.',
	z_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for z filter.',
	y_cmFringeExposureId INTEGER NULL COMMENT 'Pointer to CalibratedMasterFringeExposure for y filter.',
	PRIMARY KEY (cseGroupId),
	KEY (cmBiasExposureId),
	KEY (cmDarkExposureId),
	KEY (u_cmFlatExposureId)
) ;


CREATE TABLE _SourceClassif2Descr
(
	scId INTEGER NOT NULL COMMENT 'Pointer to an entry in SourceClassification table.',
	scAttrId SMALLINT NOT NULL COMMENT 'Pointer to an entry in SourceClassifAttr table',
	scDescrId SMALLINT NOT NULL COMMENT 'Pointer to an entry in SourceClassifDescr table.',
	status BIT NULL DEFAULT 1 COMMENT 'Status: ''yes'' / ''no''. Default: ''yes''',
	KEY (scId),
	KEY (scAttrId),
	KEY (scDescrId)
)  COMMENT='Mapping table: SourceClassif --> (SourceClassifAttr + SourceClassifDescr + value "yes/no")';


CREATE TABLE _Object2Type
(
	objectId BIGINT NOT NULL COMMENT 'Pointer to an entry in Object table',
	typeId SMALLINT NOT NULL COMMENT 'Pointer to an entry in ObjectType table',
	probability TINYINT NULL DEFAULT 100 COMMENT 'Probability that given object is of given type. Range 0-100 %',
	KEY (objectId),
	KEY (typeId)
)  COMMENT='Mapping Object --> types, with probabilities';


CREATE TABLE _MovingObject2Type
(
	movingObjectId BIGINT NOT NULL COMMENT 'Pointer to entry in MovingObject table',
	typeId SMALLINT NOT NULL COMMENT 'Pointer to entry in ObjectType table',
	probability TINYINT NULL DEFAULT 100 COMMENT 'Probability that given MovingObject is of given type. Range: 0-100 (in%)',
	KEY (movingObjectId),
	KEY (typeId)
)  COMMENT='Mapping: moving object --> types, with probabilities';


CREATE TABLE _Alert2Type
(
	alertTypeId SMALLINT NOT NULL COMMENT 'Pointer to AlertType',
	alertId INTEGER NOT NULL COMMENT 'Pointer to Alert',
	KEY (alertId),
	KEY (alertTypeId)
) ;


CREATE TABLE mops_SSM
(
	ssmId BIGINT NOT NULL AUTO_INCREMENT,
	ssmDescId SMALLINT NULL COMMENT 'Pointer to SSM description',
	q DOUBLE NOT NULL COMMENT 'semi-major axis, AU',
	e DOUBLE NOT NULL COMMENT 'eccentricity e (dimensionless)',
	i DOUBLE NOT NULL COMMENT 'inclination, deg',
	node DOUBLE NOT NULL COMMENT 'longitude of ascending node, deg',
	argPeri DOUBLE NOT NULL COMMENT 'argument of perihelion, deg',
	timePeri DOUBLE NOT NULL COMMENT 'time of perihelion, MJD (UTC)',
	epoch DOUBLE NOT NULL COMMENT 'epoch of osculating elements, MJD (UTC)',
	h_v DOUBLE NOT NULL COMMENT 'Absolute magnitude',
	h_ss DOUBLE NULL COMMENT '??',
	g DOUBLE NULL COMMENT 'Slope parameter g, dimensionless',
	albedo DOUBLE NULL COMMENT 'Albedo, dimensionless',
	ssmObjectName VARCHAR(32) NOT NULL COMMENT 'MOPS synthetic object name',
	PRIMARY KEY (ssmId),
	UNIQUE UQ_mopsSSM_ssmObjectName(ssmObjectName),
	INDEX idx_mopsSSM_ssmDescId (ssmDescId ASC),
	INDEX idx_mopsSSM_epoch (epoch ASC)
)  COMMENT='Table that contains synthetic solar system model (SSM) objects.';


CREATE TABLE sdqa_Threshold
(
	sdqa_thresholdId SMALLINT NOT NULL COMMENT 'Primary key.',
	sdqa_metricId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Metric table.',
	version SMALLINT NOT NULL COMMENT 'One-based version number for records associated with the same sdqa_metricId.',
	vBest SMALLINT NOT NULL COMMENT 'Flag indicating whether version is not best (0); best, where version is unlocked (1); and best, where version is locked (2). Only an unlocked best version can be replaced with a later best version.',
	upperThreshold DOUBLE NULL COMMENT 'Threshold for which a metric value is tested to be greater than.',
	lowerThreshold DOUBLE NULL COMMENT 'Threshold for which a metric value is tested to be less than.',
	createdDate DATETIME NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT 'Database timestamp when the record is inserted.',
	PRIMARY KEY (sdqa_thresholdId),
	KEY (sdqa_metricId)
)  COMMENT='Version-controlled metric thresholds. Total number of these records is approximately equal to 30 x the number of times the thresholds will be changed over the entire period of LSST operations (of ordre of 100), with most of the changes occuring in the first year of operations.';


CREATE TABLE sdqa_Rating_4ScienceFPAExposure
(
	sdqa_ratingId BIGINT NOT NULL COMMENT 'Primary key.',
	sdqa_metricId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Metric.',
	sdqa_thresholdId SMALLINT NOT NULL COMMENT 'Pointer to sdqa_Threshold.',
	exposureId INTEGER NOT NULL COMMENT 'Pointer to Science_FPA_Exposure.',
	metricValue DOUBLE NOT NULL COMMENT 'Value of this SDQA metric.',
	metricErr DOUBLE NOT NULL COMMENT 'Uncertainty of the value of this metric.',
	PRIMARY KEY (sdqa_ratingId),
	KEY (exposureId),
	KEY (sdqa_metricId)
)  COMMENT='Various SDQA ratings for a given FPA image.';


CREATE TABLE aux_Source
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_IR_FPA_Exposure
(
	dummy INTEGER NULL
)  COMMENT='Kem: "we need an IRexposure table, and probably a CloudMap table (which connects IRexposures to 2-D maps of clouds in a particular exposure.  The IRexposure should link to each ScienceExposure."';


CREATE TABLE aux_Science_FPA_SpectraExposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Flat_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Dark_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Calibration_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Bias_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE prv_UpdatableColumn
(
	columnId SMALLINT NOT NULL COMMENT 'Unique id.',
	tableId SMALLINT NOT NULL COMMENT 'Pointer to an entry in UpdatableTable, a table this column belongs to.',
	columnName VARCHAR(64) NOT NULL COMMENT 'Name, must be the same as in the database schema.',
	PRIMARY KEY (columnId),
	KEY (tableId)
)  COMMENT='Keep track of all columns that are updated by pipelines/stages';


CREATE TABLE prv_Telescope
(
	telescopeId TINYINT NOT NULL COMMENT 'Unique id.',
	focalPlaneId TINYINT NOT NULL COMMENT 'Pointer to an entry in FocalPlane table.',
	PRIMARY KEY (telescopeId),
	KEY (focalPlaneId)
) ;


CREATE TABLE prv_Raft
(
	raftId SMALLINT NOT NULL COMMENT 'Unique id.',
	focalPlaneId TINYINT NOT NULL COMMENT 'Pointer to an entry in the focal plane.',
	ccd01 SMALLINT NOT NULL,
	ccd02 SMALLINT NOT NULL,
	ccd03 SMALLINT NOT NULL,
	ccd04 SMALLINT NOT NULL,
	ccd05 SMALLINT NOT NULL,
	ccd06 SMALLINT NOT NULL,
	ccd07 SMALLINT NOT NULL,
	ccd08 SMALLINT NOT NULL,
	ccd09 SMALLINT NOT NULL,
	PRIMARY KEY (raftId),
	KEY (focalPlaneId)
)  COMMENT='Table that keeps assignment of CCDs to Rafts. 1 row: assignement for 1 raft';


CREATE TABLE prv_Filter
(
	filterId TINYINT NOT NULL COMMENT 'Unique id.',
	focalPlaneId TINYINT NOT NULL COMMENT 'Pointer to FocalPlane - focal plane this filter belongs to.',
	name VARCHAR(80) NOT NULL COMMENT 'String description of the filter,e.g. ''VR SuperMacho c6027''.',
	url VARCHAR(255) NULL COMMENT 'URL for filter transmission curve. (Added from archive specs for LSST precursor data).',
	clam FLOAT(0) NOT NULL COMMENT 'Filter centroid wavelength (Angstroms). (Added from archive specs for LSST precursor data).',
	bw FLOAT(0) NOT NULL COMMENT 'Filter effective bandwidth (Angstroms). (Added from archive specs for LSST precursor data).',
	PRIMARY KEY (filterId),
	UNIQUE name(name),
	INDEX focalPlaneId (focalPlaneId ASC)
) TYPE=MyISAM COMMENT='One row per color - the table will have 6 rows';


CREATE TABLE prv_cnf_FocalPlane
(
	cFocalPlaneId SMALLINT NOT NULL COMMENT 'Unique id.',
	focalPlaneId TINYINT NOT NULL COMMENT 'Pointer to FocalPlane table - focal plane that this configuration corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cFocalPlaneId),
	KEY (focalPlaneId)
)  COMMENT='Table to store focal plane configuration.';


CREATE TABLE prv_Stage2UpdatableColumn
(
	stageId SMALLINT NOT NULL COMMENT 'Pointer to an entry in Stage table.',
	columnId SMALLINT NOT NULL COMMENT 'Pointer to an entry in UpdatableColumn table.',
	cStage2UpdateColumnId SMALLINT NOT NULL COMMENT 'Pointer to an entry in Config_Stage2UpdatableColumn table.',
	KEY (cStage2UpdateColumnId),
	KEY (stageId),
	KEY (columnId)
)  COMMENT='Mapping table. Keeps track between Stage --> set of columns that given Stage can update, and time period during which given mapping is valid.';


CREATE TABLE prv_Stage2Slice
(
	stage2SliceId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	stageId SMALLINT NOT NULL COMMENT 'Pointer to an entry in Stage table.',
	sliceId MEDIUMINT NOT NULL COMMENT 'Pointer to an entry in Slice table.',
	PRIMARY KEY (stage2SliceId),
	KEY (sliceId),
	KEY (stageId)
)  COMMENT='Mapping table. Keeps track of mapping between Stages and Slices.';


CREATE TABLE prv_Stage
(
	stageId SMALLINT NOT NULL COMMENT 'Unique id.',
	policyId MEDIUMINT NOT NULL COMMENT 'Pointer to Policy table: Stage-related policy.',
	stageName VARCHAR(255) NULL,
	PRIMARY KEY (stageId),
	KEY (policyId)
)  COMMENT='Table that defines all LSST stages. Actual Stage configurations are tracked through Config_Stage2Pipeline';


CREATE TABLE prv_Run
(
	runId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	policyId MEDIUMINT NOT NULL COMMENT 'Pointer to Policy table: run-related policy.',
	PRIMARY KEY (runId),
	KEY (policyId)
)  COMMENT='Table to define LSST run. An example of a run "nightly processing run"';


CREATE TABLE prv_Pipeline
(
	pipelineId TINYINT NOT NULL COMMENT 'Unique id.',
	policyId MEDIUMINT NOT NULL COMMENT 'Pointer to Policy table: pipeline-related table.',
	pipelineName VARCHAR(64) NULL COMMENT 'name of the pipeline',
	PRIMARY KEY (pipelineId),
	KEY (policyId)
)  COMMENT='Defines all LSST pipelines. 1 row = 1 pipeline. Actual configurations (which stages are part of given pipeline) are tracked through cnf_Stage2Pipeline';


CREATE TABLE prv_Node
(
	nodeId SMALLINT NOT NULL COMMENT 'Unique id.',
	policyId MEDIUMINT NOT NULL COMMENT 'Pointer to Policy table: node-related policy.',
	PRIMARY KEY (nodeId),
	KEY (policyId)
) ;


CREATE TABLE prv_cnf_Policy
(
	cPolicyId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	policyId MEDIUMINT NOT NULL COMMENT 'Pointer to Policy table - policy that this config corresponds to.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (cPolicyId),
	KEY (policyId)
) ;


CREATE TABLE TemplateImage
(
	templateImageId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (templateImageId)
)  COMMENT='Table that defines which template images';


CREATE TABLE PostageStampJpegs
(
	ra DOUBLE NOT NULL COMMENT 'ra of upper left corner',
	decl DOUBLE NULL COMMENT 'decl or upper left corner',
	sizeRa FLOAT(0) NOT NULL,
	sizeDecl FLOAT(0) NOT NULL,
	url VARCHAR(255) NULL COMMENT 'logical url of the jpeg image'
) ;


CREATE TABLE Fringe_FPA_CMExposure
(
	cdFringeExposureId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (cdFringeExposureId)
)  COMMENT='Calibrated Master FringeExposure: a bias exposure that is composed of multiple single fringe exposures.';


CREATE TABLE Flat_FPA_CMExposure
(
	cmFlatExposureId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (cmFlatExposureId)
)  COMMENT='Calibrated Master Flat Exposure: a bias exposure that is composed of multiple single flat exposures.';


CREATE TABLE Dark_FPA_CMExposure
(
	cmDarkExposureId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (cmDarkExposureId)
)  COMMENT='Calibrated Master Dark Exposure: a bias exposure that is composed of multiple single dark exposures.';


CREATE TABLE CalibType
(
	calibTypeId TINYINT NOT NULL,
	descr VARCHAR(255) NULL,
	PRIMARY KEY (calibTypeId)
)  COMMENT='Table with definition of Calibration types: flat, bias, mask, etc...';


CREATE TABLE Bias_FPA_CMExposure
(
	cmBiasExposureId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (cmBiasExposureId)
)  COMMENT='Calibrated Master Bias Exposure: a bias exposure that is composed of multiple single bias exposures.';


CREATE TABLE SourceClassifDescr
(
	scDescrId SMALLINT NOT NULL COMMENT 'Unique id.',
	scDescr VARCHAR(255) NOT NULL COMMENT 'description',
	PRIMARY KEY (scDescrId)
)  COMMENT='Entries stored in this table are used to construct the Source Classification table (rows). Examples: "present in both visits", "shape differs in two visits", elliptical after PSF deconvolve",  "positive flux excursion".';


CREATE TABLE SourceClassifAttr
(
	scAttrId SMALLINT NOT NULL COMMENT 'Unique id.',
	scAttrDescr VARCHAR(255) NOT NULL COMMENT 'Attribute description.',
	PRIMARY KEY (scAttrId)
)  COMMENT='Entries stored in this table are used to construct the Source Classification table (columns). Examples: "Cosmin Ray", "Negative Excursion", "Positive Excursion", "Fast Mover", "Flash".';


CREATE TABLE SourceClassif
(
	scId INTEGER NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (scId)
)  COMMENT='Table keeping information about source classification.';


CREATE TABLE ObjectType
(
	typeId SMALLINT NOT NULL COMMENT 'Unique id.',
	description VARCHAR(255) NULL,
	PRIMARY KEY (typeId)
)  COMMENT='Table to store description of object types. It includes all object types: static, variables, Solar System objects, etc.';


CREATE TABLE AlertType
(
	alertTypeId SMALLINT NOT NULL COMMENT 'unique id of alert type',
	alertTypeDescr VARCHAR(50) NULL COMMENT 'Description of the alert type.',
	PRIMARY KEY (alertTypeId)
) TYPE=MyISAM COMMENT='Table to store alert types';


CREATE TABLE __SQLLog_placeholder
(
	sqlLogId BIGINT NOT NULL,
	tstamp DATETIME NOT NULL COMMENT 'Timestamp when query was issued',
	elapsed FLOAT(0) NOT NULL COMMENT 'Length of the query execution (sec?)',
	userId INTEGER NOT NULL COMMENT 'Unique user identifier (among users logged on?)',
	domain VARCHAR(80) NOT NULL COMMENT 'Domain name',
	ipaddr VARCHAR(80) NOT NULL COMMENT 'IP address where query originated',
	query TEXT NOT NULL COMMENT 'Query text string (SQL)',
	PRIMARY KEY (sqlLogId)
) TYPE=MyISAM COMMENT='Table to store DB usage statistics. Placeholder.';


CREATE TABLE mops_SSMDesc
(
	ssmDescId SMALLINT NOT NULL AUTO_INCREMENT COMMENT 'Auto-generated row ID',
	prefix CHAR(4) NULL COMMENT 'MOPS prefix code S0/S1/etc.',
	description VARCHAR(100) NULL COMMENT 'Long description',
	PRIMARY KEY (ssmDescId)
)  COMMENT='Table containing object name prefixes and descriptions of synthetic solar system object types.';


CREATE TABLE _mops_Config
(
	configId BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Referring derived object',
	configText TEXT NULL COMMENT 'Config contents',
	PRIMARY KEY (configId)
)  COMMENT='Internal table used to ship runtime configuration data to MOPS worker nodes. 
 This will eventually be replaced by some other mechanism. Note however that this data must be captured by the LSST software provenance tables.';


CREATE TABLE sdqa_Status
(
	sdqa_statusId SMALLINT NOT NULL COMMENT 'Primary key',
	statusName VARCHAR(30) NOT NULL COMMENT 'One-word, camel-case, descriptive name of a possible image status (e.g., passedAuto, marginallyPassedManual, etc.)',
	definition VARCHAR(255) NOT NULL COMMENT 'Detailed Definition of the image status',
	PRIMARY KEY (sdqa_statusId)
)  COMMENT='Unique set of status names and their definitions, e.g. "passed", "failed", etc. ';


CREATE TABLE sdqa_Metric
(
	sdqa_metricId SMALLINT NOT NULL COMMENT 'Primary key.',
	metricName VARCHAR(30) NOT NULL COMMENT 'One-word, camel-case, descriptive name of a possible metric (e.g., mSatPix, median, etc).',
	physicalUnits VARCHAR(30) NOT NULL COMMENT 'Physical units of metric.',
	dataType CHAR(10) NOT NULL COMMENT 'Flag indicating whether data type of the metric value is integer (0) or float (1)',
	definition VARCHAR(255) NOT NULL,
	PRIMARY KEY (sdqa_metricId)
)  COMMENT='Unique set of metric names and associated metadata (e.g., "nDeadPix", "median", etc.). There will be approximately 30 records total in this table.';


CREATE TABLE aux_Object
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_SED
(
	dummy INTEGER NULL
)  COMMENT='Spectral Energy Distribution. Kem: "...SED tables having SEDstdID, altitude, azimuth and an URL to transmission vs wavelength"';


CREATE TABLE aux_LIDARshot
(
	dummy INTEGER NULL
)  COMMENT='Kem: "There should be a LIDARshot table which has a time, wavelength, altitude, azimuth and two URLs pointing to a 1-D file of delay-time versus intensity and a transparency vs wavelenght file."';


CREATE TABLE aux_FPA_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_CloudMap
(
	dummy INTEGER NULL
) ;


CREATE TABLE aux_Amp_Exposure
(
	dummy INTEGER NULL
) ;


CREATE TABLE _aux_Science_FPA_SpectraExposure_Group
(
	dummy INTEGER NULL
) ;


CREATE TABLE prv_UpdatableTable
(
	tableId SMALLINT NOT NULL COMMENT 'Unique id.',
	tableName VARCHAR(64) NOT NULL COMMENT 'Name of table (must be the same as in schema, for example Object, DIASource...)',
	PRIMARY KEY (tableId)
)  COMMENT='Keeps track of names of database tables that are (or can be) updated by stages.';


CREATE TABLE prv_FocalPlane
(
	focalPlaneId TINYINT NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (focalPlaneId)
)  COMMENT='Each row keeps assignment of Rafts to FocalPlane (there will be just one row I guess...)';


CREATE TABLE prv_Slice
(
	sliceId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	PRIMARY KEY (sliceId)
) ;


CREATE TABLE prv_Policy
(
	policyId MEDIUMINT NOT NULL COMMENT 'Unique id.',
	policyName VARCHAR(80) NOT NULL,
	PRIMARY KEY (policyId)
) ;


CREATE TABLE prv_cnf_Stage2UpdatableColumn
(
	c_stage2UpdatableColumn SMALLINT NOT NULL COMMENT 'Unique id.',
	validityBegin DATETIME NULL,
	validityEnd DATETIME NULL,
	PRIMARY KEY (c_stage2UpdatableColumn)
) ;





-- Create Foreign Key Constraints 
ALTER TABLE mops_Removals2Tracklets ADD CONSTRAINT FK_mopsRemovals2Tracklets_mopsTracklets 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE mops_Removals2Tracklets ADD CONSTRAINT FK_mopsRemovals2Tracklets_mops_History 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_Precoveries2Tracklets ADD CONSTRAINT FK_mopsPrecoveries2Tracklets_mops_Tracklets 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE mops_Precoveries2Tracklets ADD CONSTRAINT FK_mopsPrecoveries2Tracklets_mops_History 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_MovingObject2Tracklets ADD CONSTRAINT FK_mopsMovingObject2Tracklets_mopsTracklets 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE mops_MovingObject2Tracklets ADD CONSTRAINT FK_mopsMovingObject2Tracklets_MovingObject_movingObjectId 
	FOREIGN KEY (movingObjectId) REFERENCES MovingObject (movingObjectId);

ALTER TABLE _DIASource2Alert ADD CONSTRAINT FK_DIASource2Alert_Alert 
	FOREIGN KEY (alertId) REFERENCES Alert (alertId);

ALTER TABLE _DIASource2Alert ADD CONSTRAINT FK_DIASource2Alert_DIASource 
	FOREIGN KEY (diaSourceId) REFERENCES DIASource (diaSourceId);

ALTER TABLE mops_Tracklets2DIASource ADD CONSTRAINT FK_mopsTracklets2DIASource_DIASource 
	FOREIGN KEY (diaSourceId) REFERENCES DIASource (diaSourceId);

ALTER TABLE mops_Tracklets2DIASource ADD CONSTRAINT FK_mopsTracklets2DIASource_mopsTracklets 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE mops_Tracklets ADD CONSTRAINT FK_mopsTracklets_mopsSSM 
	FOREIGN KEY (ssmId) REFERENCES mops_SSM (ssmId);

ALTER TABLE mops_Tracklets ADD CONSTRAINT FK_mopsTracklets_ScienceCCDExposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Science_CCD_Exposure (ccdExposureId);

ALTER TABLE mops_Runtime ADD CONSTRAINT FK_mopsRuntime_mopsHistory 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_Identifications2MovingObject ADD CONSTRAINT FK_mopsIdentifications2MovingObject_MovingObject 
	FOREIGN KEY (childObjectId) REFERENCES MovingObject (movingObjectId);

ALTER TABLE mops_Identifications2MovingObject ADD CONSTRAINT FK_mopsIdentifications2MovingObject_mops_History 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_Derivations2Tracklets ADD CONSTRAINT FK_Derivations2Tracklets_History_eventId 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_Derivations2Tracklets ADD CONSTRAINT FK_Derivations2Tracklets_Tracklets_trackletId 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE mops_Attributions2Tracklets ADD CONSTRAINT FK_mopsAttributions2Tracklets_History_eventId 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE mops_Attributions2Tracklets ADD CONSTRAINT FK_mopsAttributions2Tracklets_Tracklets_trackletId 
	FOREIGN KEY (trackletId) REFERENCES mops_Tracklets (trackletId);

ALTER TABLE _mops_MoidQueue ADD CONSTRAINT FK__mops_MoidQueue_mops_History 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE _mops_MoidQueue ADD CONSTRAINT FK__mops_MoidQueue_MovingObject 
	FOREIGN KEY (movingObjectId) REFERENCES MovingObject (movingObjectId);

ALTER TABLE _mops_EonQueue ADD CONSTRAINT FK__mopsEonQueue_MovingObject 
	FOREIGN KEY (movingObjectId) REFERENCES MovingObject (movingObjectId);

ALTER TABLE _mops_EonQueue ADD CONSTRAINT FK__EonQueue_eventId 
	FOREIGN KEY (eventId) REFERENCES mops_History (eventId);

ALTER TABLE sdqa_Rating_4ScienceCCDExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceCCDExposure_Science_CCD_Exposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Science_CCD_Exposure (ccdExposureId);

ALTER TABLE sdqa_Rating_4ScienceCCDExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceCCDExposure_sdqa_Metric 
	FOREIGN KEY (sdqa_metricId) REFERENCES sdqa_Metric (sdqa_metricId);

ALTER TABLE sdqa_Rating_4ScienceCCDExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceCCDExposure_sdqa_Threshold 
	FOREIGN KEY (sdqa_thresholdId) REFERENCES sdqa_Threshold (sdqa_thresholdId);

ALTER TABLE sdqa_Rating_4ScienceAmpExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceAmpExposure_Science_Amp_Exposure 
	FOREIGN KEY (ampExposureId) REFERENCES Science_Amp_Exposure (ampExposureId);

ALTER TABLE sdqa_Rating_4ScienceAmpExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceAmpExposure_sdqa_Metric 
	FOREIGN KEY (sdqa_metricId) REFERENCES sdqa_Metric (sdqa_metricId);

ALTER TABLE sdqa_Rating_4ScienceAmpExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceAmpExposure_sdqa_Threshold 
	FOREIGN KEY (sdqa_thresholdId) REFERENCES sdqa_Threshold (sdqa_thresholdId);

ALTER TABLE VarObject ADD CONSTRAINT FK_VarObject_Object_objectId 
	FOREIGN KEY (objectId) REFERENCES Object (objectId);

ALTER TABLE ObjectPhotoZ ADD CONSTRAINT FK_ObjectPhotoZ_Object_objectId 
	FOREIGN KEY (objectId) REFERENCES Object (objectId);

ALTER TABLE Alert ADD CONSTRAINT FK_Alert_Object 
	FOREIGN KEY (objectId) REFERENCES Object (objectId);

ALTER TABLE Science_CCD_Exposure ADD CONSTRAINT FK_Science_CCD_Exposure_Raw_CCD_Exposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Raw_CCD_Exposure (ccdExposureId);

ALTER TABLE Science_Amp_Exposure ADD CONSTRAINT FK_Science_Amp_Exposure_sdqa_Status 
	FOREIGN KEY (sdqa_statusId) REFERENCES sdqa_Status (sdqa_statusId);

ALTER TABLE Science_Amp_Exposure ADD CONSTRAINT FK_Science_Amp_Exposure_Raw_Amp_Exposure 
	FOREIGN KEY (ampExposureId) REFERENCES Raw_Amp_Exposure (ampExposureId);

ALTER TABLE Science_Amp_Exposure ADD CONSTRAINT FK_Science_Amp_Exposure_Science_CCD_Exposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Science_CCD_Exposure (ccdExposureId);

ALTER TABLE Calibration_CCD_Exposure ADD CONSTRAINT FK_Calibration_CCD_Exposure_Calibration_FPA_Exposure 
	FOREIGN KEY (exposureId) REFERENCES Calibration_FPA_Exposure (exposureId);

ALTER TABLE Calibration_CCD_Exposure ADD CONSTRAINT FK_Calibration_CCD_Exposure_Raw_CCD_Exposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Raw_CCD_Exposure (ccdExposureId);

ALTER TABLE Calibration_Amp_Exposure ADD CONSTRAINT FK_Calibration_Amp_Exposure_Calibration_CCD_Exposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Calibration_CCD_Exposure (ccdExposureId);

ALTER TABLE Calibration_Amp_Exposure ADD CONSTRAINT FK_Calibration_Amp_Exposure_Raw_Amp_Exposure 
	FOREIGN KEY (ampExposureId) REFERENCES Raw_Amp_Exposure (ampExposureId);

ALTER TABLE _Source2Amp_Exposure ADD CONSTRAINT FK_Source2Exposure_Source 
	FOREIGN KEY (sourceId) REFERENCES Source (sourceId);

ALTER TABLE mops_History ADD CONSTRAINT FK_mopsHistory_MovingObject 
	FOREIGN KEY (movingObjectId) REFERENCES MovingObject (movingObjectId);

ALTER TABLE mops_History ADD CONSTRAINT FK_mopsHistory_ScienceCCDExposure 
	FOREIGN KEY (ccdExposureId) REFERENCES Science_CCD_Exposure (ccdExposureId);

ALTER TABLE Raw_CCD_Exposure ADD CONSTRAINT FK_CCDExposure_FPAExposure_exposureId 
	FOREIGN KEY (exposureId) REFERENCES Raw_FPA_Exposure (exposureId);

ALTER TABLE Raw_Amp_Exposure ADD CONSTRAINT FK_AmpExposure_CCDExposure_ccdExposureId 
	FOREIGN KEY (ccdExposureId) REFERENCES Raw_CCD_Exposure (ccdExposureId);

ALTER TABLE _Science_FPA_Exposure2TemplateImage ADD CONSTRAINT FK_Exposure2TemplateImage_TemplateImage_templateImageId 
	FOREIGN KEY (templateImageId) REFERENCES TemplateImage (templateImageId);

ALTER TABLE _FPA_Fringe2CMExposure ADD CONSTRAINT FK_CMFringeExposure_BiasExposure 
	FOREIGN KEY (biasExposureId) REFERENCES Bias_FPA_Exposure (biasExposureId);

ALTER TABLE _FPA_Fringe2CMExposure ADD CONSTRAINT FK_CMFringeExposure_CMFringeExposure 
	FOREIGN KEY (cmFringeExposureId) REFERENCES Fringe_FPA_CMExposure (cdFringeExposureId);

ALTER TABLE _FPA_Fringe2CMExposure ADD CONSTRAINT FK_CMFringeExposure_DarkExposure 
	FOREIGN KEY (darkExposureId) REFERENCES Dark_FPA_Exposure (darkExposureId);

ALTER TABLE _FPA_Fringe2CMExposure ADD CONSTRAINT FK_CMFringeExposure_FlatExposure 
	FOREIGN KEY (flatExposureId) REFERENCES Flat_FPA_Exposure (flatExposureId);

ALTER TABLE _FPA_Flat2CMExposure ADD CONSTRAINT FK_MasterFlat2Exposure_BiasExposure 
	FOREIGN KEY (biasExposureId) REFERENCES Bias_FPA_Exposure (biasExposureId);

ALTER TABLE _FPA_Flat2CMExposure ADD CONSTRAINT FK_MasterFlat2Exposure_DarkExposure 
	FOREIGN KEY (darkExposureId) REFERENCES Dark_FPA_Exposure (darkExposureId);

ALTER TABLE _FPA_Flat2CMExposure ADD CONSTRAINT FK_MasterFlat2Exposure_FlatExposure 
	FOREIGN KEY (flatExposureId) REFERENCES Flat_FPA_Exposure (flatExposureId);

ALTER TABLE _FPA_Dark2CMExposure ADD CONSTRAINT FK_MasterDark2Exposure_BiasExposure 
	FOREIGN KEY (biasExposureId) REFERENCES Bias_FPA_Exposure (biasExposureId);

ALTER TABLE _FPA_Dark2CMExposure ADD CONSTRAINT FK_MasterDark2Exposure_CalibratedMasterDarkExposure 
	FOREIGN KEY (cmDarkExposureId) REFERENCES Dark_FPA_CMExposure (cmDarkExposureId);

ALTER TABLE _FPA_Dark2CMExposure ADD CONSTRAINT FK_MasterDark2Exposure_DarkExposure 
	FOREIGN KEY (darkExposureId) REFERENCES Dark_FPA_Exposure (darkExposureId);

ALTER TABLE _FPA_Bias2CMExposure ADD CONSTRAINT FK_MasterBias2Exposure_BiasExposure 
	FOREIGN KEY (biasExposureId) REFERENCES Bias_FPA_Exposure (biasExposureId);

ALTER TABLE _FPA_Bias2CMExposure ADD CONSTRAINT FK_MasterBias2Exposure_CalibratedMasterBiasExposure 
	FOREIGN KEY (cmBiasExposureId) REFERENCES Bias_FPA_CMExposure (cmBiasExposureId);

ALTER TABLE prv_Snapshot ADD CONSTRAINT FK_Snapshot_ProcessingHistory 
	FOREIGN KEY (procHistoryId) REFERENCES prv_ProcHistory (procHistoryId);

ALTER TABLE prv_cnf_MaskAmpImage ADD CONSTRAINT FK_Config_MaskAmpImage_Amplifier 
	FOREIGN KEY (amplifierId) REFERENCES prv_Amplifier (amplifierId);

ALTER TABLE prv_cnf_Amplifier ADD CONSTRAINT FK_Config_Amplifier_Amplifier 
	FOREIGN KEY (amplifierId) REFERENCES prv_Amplifier (amplifierId);

ALTER TABLE Visit ADD CONSTRAINT FK_Visit_Raw_FPA_Exposure 
	FOREIGN KEY (exposureId) REFERENCES Raw_FPA_Exposure (exposureId);

ALTER TABLE Science_FPA_Exposure ADD CONSTRAINT FK_ScienceFPAExposure_FPAExposure 
	FOREIGN KEY (exposureId) REFERENCES sdqa_Rating_4ScienceFPAExposure (exposureId);

ALTER TABLE Calibration_FPA_Exposure ADD CONSTRAINT FK_CalibrationFPAExposure_FPAExposure_exposureId 
	FOREIGN KEY (exposureId) REFERENCES Raw_FPA_Exposure (exposureId);

ALTER TABLE _Source2Object ADD CONSTRAINT FK_Source2Object_Object 
	FOREIGN KEY (objectId) REFERENCES Object (objectId);

ALTER TABLE _Source2Object ADD CONSTRAINT FK_Source2Object_Source 
	FOREIGN KEY (sourceId) REFERENCES Source (sourceId);

ALTER TABLE prv_cnf_CCD ADD CONSTRAINT FK_Config_CCD_CCD 
	FOREIGN KEY (ccdId) REFERENCES prv_CCD (ccdId);

ALTER TABLE prv_Amplifier ADD CONSTRAINT FK_Amplifier_CCD 
	FOREIGN KEY (ccdId) REFERENCES prv_CCD (ccdId);

ALTER TABLE prv_cnf_Stage2Pipeline ADD CONSTRAINT FK_Config_Stage2Pipeline_Stage2Pipeline 
	FOREIGN KEY (stage2pipelineId) REFERENCES prv_Stage2Pipeline (stage2pipelineId);

ALTER TABLE prv_cnf_Pipeline2Run ADD CONSTRAINT FK_Config_Pipeline2Run_Pipeline2Run 
	FOREIGN KEY (pipeline2runId) REFERENCES prv_Pipeline2Run (pipeline2runId);

ALTER TABLE Source ADD CONSTRAINT FK_Source_Object_objectId 
	FOREIGN KEY (objectId) REFERENCES Object (latestObsTime);

ALTER TABLE Raw_FPA_Exposure ADD CONSTRAINT FK_FPAExposure_Filter_filterId 
	FOREIGN KEY (filterId) REFERENCES prv_Filter (filterId);

ALTER TABLE prv_Stage2ProcHistory ADD CONSTRAINT FK_prv_Stage2ProcHistory_prv_ProcHistory 
	FOREIGN KEY (procHistoryId) REFERENCES prv_ProcHistory (procHistoryId);

ALTER TABLE prv_cnf_Telescope ADD CONSTRAINT FK_Config_Telescope_Telescope 
	FOREIGN KEY (telescopeId) REFERENCES prv_Telescope (telescopeId);

ALTER TABLE prv_cnf_Raft ADD CONSTRAINT FK_Config_Raft_Raft 
	FOREIGN KEY (raftId) REFERENCES prv_Raft (raftId);

ALTER TABLE prv_cnf_Filter ADD CONSTRAINT FK_Config_Filter_Filter 
	FOREIGN KEY (filterId) REFERENCES prv_Filter (filterId);

ALTER TABLE prv_CCD ADD CONSTRAINT FK_CCD_Raft 
	FOREIGN KEY (raftId) REFERENCES prv_Raft (raftId);

ALTER TABLE prv_Pipeline2Run ADD CONSTRAINT FK_Pipeline2Run_Pipeline 
	FOREIGN KEY (pipelineId) REFERENCES prv_Pipeline (pipelineId);

ALTER TABLE prv_Pipeline2Run ADD CONSTRAINT FK_Pipeline2Run_Run 
	FOREIGN KEY (runId) REFERENCES prv_Run (runId);

ALTER TABLE prv_cnf_Stage2Slice ADD CONSTRAINT FK_Config_Stage2Slice_Stage2Slice 
	FOREIGN KEY (stage2sliceId) REFERENCES prv_Stage2Slice (stage2SliceId);

ALTER TABLE prv_cnf_Slice ADD CONSTRAINT FK_Config_Slice_Node 
	FOREIGN KEY (nodeId) REFERENCES prv_Node (nodeId);

ALTER TABLE prv_cnf_Slice ADD CONSTRAINT FK_Config_Slice_Slice 
	FOREIGN KEY (sliceId) REFERENCES prv_Slice (sliceId);

ALTER TABLE prv_cnf_Node ADD CONSTRAINT FK_Config_Node_Node 
	FOREIGN KEY (nodeId) REFERENCES prv_Node (nodeId);

ALTER TABLE _Science_FPA_Exposure_Group ADD CONSTRAINT FK_CalibratedScienceExposure_Group_CMBiasExposure 
	FOREIGN KEY (cmBiasExposureId) REFERENCES Bias_FPA_CMExposure (cmBiasExposureId);

ALTER TABLE _Science_FPA_Exposure_Group ADD CONSTRAINT FK_CalibratedScienceExposure_Group_CMDarkExposure 
	FOREIGN KEY (cmDarkExposureId) REFERENCES Dark_FPA_CMExposure (cmDarkExposureId);

ALTER TABLE _SourceClassif2Descr ADD CONSTRAINT FK_SourceClassif2Descr_SourceClassif 
	FOREIGN KEY (scId) REFERENCES SourceClassif (scId);

ALTER TABLE _SourceClassif2Descr ADD CONSTRAINT FK_SourceClassif2Descr_SourceClassifAttr 
	FOREIGN KEY (scAttrId) REFERENCES SourceClassifAttr (scAttrId);

ALTER TABLE _SourceClassif2Descr ADD CONSTRAINT FK_SourceClassif2Descr_SourceClassifDescr 
	FOREIGN KEY (scDescrId) REFERENCES SourceClassifDescr (scDescrId);

ALTER TABLE _Object2Type ADD CONSTRAINT FK_Object2Type_Object 
	FOREIGN KEY (objectId) REFERENCES Object (latestObsTime);

ALTER TABLE _Object2Type ADD CONSTRAINT FK_Object2Type_ObjectType 
	FOREIGN KEY (typeId) REFERENCES ObjectType (typeId);

ALTER TABLE _MovingObject2Type ADD CONSTRAINT FK_MovingObject2Type_ObjectType 
	FOREIGN KEY (typeId) REFERENCES ObjectType (typeId);

ALTER TABLE _Alert2Type ADD CONSTRAINT FK_Alert2Type_Alert_alertId 
	FOREIGN KEY (alertId) REFERENCES Alert (alertId);

ALTER TABLE _Alert2Type ADD CONSTRAINT FK_Alert2Type_AlertType_alertTypeId 
	FOREIGN KEY (alertTypeId) REFERENCES AlertType (alertTypeId);

ALTER TABLE mops_SSM ADD CONSTRAINT FK_mopsSSM_mopsSSMDesc 
	FOREIGN KEY (ssmDescId) REFERENCES mops_SSMDesc (ssmDescId);

ALTER TABLE sdqa_Threshold ADD CONSTRAINT FK_sdqa_Threshold_sdqa_Metric 
	FOREIGN KEY (sdqa_metricId) REFERENCES sdqa_Metric (sdqa_metricId);

ALTER TABLE sdqa_Rating_4ScienceFPAExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceFPAExposure_Science_FPA_Exposure 
	FOREIGN KEY (exposureId) REFERENCES Science_FPA_Exposure (exposureId);

ALTER TABLE sdqa_Rating_4ScienceFPAExposure ADD CONSTRAINT FK_sdqa_Rating_4ScienceFPAExposure_sdqa_Metric 
	FOREIGN KEY (sdqa_metricId) REFERENCES sdqa_Metric (sdqa_metricId);

ALTER TABLE prv_UpdatableColumn ADD CONSTRAINT FK_UpdatableColumn_UpdatableTable 
	FOREIGN KEY (tableId) REFERENCES prv_UpdatableTable (tableId);

ALTER TABLE prv_Telescope ADD CONSTRAINT FK_Telescope_FocalPlane 
	FOREIGN KEY (focalPlaneId) REFERENCES prv_FocalPlane (focalPlaneId);

ALTER TABLE prv_Raft ADD CONSTRAINT FK_Raft_FocalPlane 
	FOREIGN KEY (focalPlaneId) REFERENCES prv_FocalPlane (focalPlaneId);

ALTER TABLE prv_Filter ADD CONSTRAINT FK_Filter_FocalPlane 
	FOREIGN KEY (focalPlaneId) REFERENCES prv_FocalPlane (focalPlaneId);

ALTER TABLE prv_cnf_FocalPlane ADD CONSTRAINT FK_Config_FocalPlane_FocalPlane 
	FOREIGN KEY (focalPlaneId) REFERENCES prv_FocalPlane (focalPlaneId);

ALTER TABLE prv_Stage2UpdatableColumn ADD CONSTRAINT FK_Stage2UpdatableColumn_Config_Stage2UpdatableColumn 
	FOREIGN KEY (cStage2UpdateColumnId) REFERENCES prv_cnf_Stage2UpdatableColumn (c_stage2UpdatableColumn);

ALTER TABLE prv_Stage2UpdatableColumn ADD CONSTRAINT FK_Stage2UpdatableColumn_UpdatableColumn 
	FOREIGN KEY (columnId) REFERENCES prv_UpdatableColumn (columnId);

ALTER TABLE prv_Stage2Slice ADD CONSTRAINT FK_ProcStep2Stage_ProcStep 
	FOREIGN KEY (sliceId) REFERENCES prv_Slice (sliceId);

ALTER TABLE prv_Stage ADD CONSTRAINT FK_Stage_Policy 
	FOREIGN KEY (policyId) REFERENCES prv_Policy (policyId);

ALTER TABLE prv_Run ADD CONSTRAINT FK_Run_Policy 
	FOREIGN KEY (policyId) REFERENCES prv_Policy (policyId);

ALTER TABLE prv_Pipeline ADD CONSTRAINT FK_Pipeline_Policy 
	FOREIGN KEY (policyId) REFERENCES prv_Policy (policyId);

ALTER TABLE prv_Node ADD CONSTRAINT FK_Node_Policy 
	FOREIGN KEY (policyId) REFERENCES prv_Policy (policyId);
